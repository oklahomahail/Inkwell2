
> inkwell@1.0.2 test:coverage /Users/davehail/Developer/inkwell
> vitest run --coverage "--reporter=verbose"


 RUN  v3.2.4 /Users/davehail/Developer/inkwell
      Coverage enabled with v8

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Project Analysis > should analyze a project with default options
Analyzing project test-project-123 with options: {}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Project Analysis > should analyze with custom options
Analyzing project test-project-123 with options: {
  includeChapters: [ [32m'chapter1'[39m, [32m'chapter2'[39m ],
  focusAreas: [ [32m'pacing'[39m, [32m'conflicts'[39m ],
  detailLevel: [32m'detailed'[39m,
  mockMode: [33mtrue[39m
}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Project Analysis > should generate unique analysis IDs
Analyzing project test-project-123 with options: {}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Project Analysis > should generate unique analysis IDs
Analyzing project test-project-123 with options: {}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Project Analysis > should force mock mode when requested
Analyzing project test-project-123 with options: { mockMode: [33mtrue[39m }

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Analysis Structure > should have valid pacing analysis
Analyzing project test-project-123 with options: {}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Analysis Structure > should have valid conflict analysis
Analyzing project test-project-123 with options: {}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Analysis Structure > should have valid character analysis
Analyzing project test-project-123 with options: {}

stdout | src/utils/flags.test.ts
🚩 Feature flags available at window.__inkwellFlags

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Analysis Structure > should have valid theme analysis
Analyzing project test-project-123 with options: {}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Analysis Structure > should have valid suggestions
Analyzing project test-project-123 with options: {}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Pacing Issues > should validate pacing issue structure
Analyzing project test-project-123 with options: {}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Conflict Analysis > should validate conflict structure
Analyzing project test-project-123 with options: {}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Character Analysis > should validate character data structure
Analyzing project test-project-123 with options: {}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Character Analysis > should validate relationship structure
Analyzing project test-project-123 with options: {}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Theme Analysis > should validate theme structure
Analyzing project test-project-123 with options: {}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Analysis History > should return empty history for new project
Getting analysis history for project test-project-123

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Save Analysis > should save analysis without error
Analyzing project test-project-123 with options: {}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Save Analysis > should save analysis without error
Saving analysis: analysis_test-project-123_1760138861593_7lerou1

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Error Handling > should handle invalid project ID gracefully
Analyzing project  with options: {}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Performance > should complete analysis in reasonable time
Analyzing project test-project-123 with options: {}

stdout | src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Performance > should handle multiple concurrent analyses
Analyzing project project-0 with options: {}
Analyzing project project-1 with options: {}
Analyzing project project-2 with options: {}
Analyzing project project-3 with options: {}
Analyzing project project-4 with options: {}

stdout | src/utils/flags.test.ts > Enhanced Feature Flags System > Feature Flag Manager > should allow setting flag values and persist them
🚩 Flag exportWizard set to false

stdout | src/utils/flags.test.ts > Enhanced Feature Flags System > Feature Flag Manager > should reset flags to defaults
🚩 Flag exportWizard set to false
🚩 Flag collaborationUI set to true
⚠️ Feature Enhanced Collaboration UI requires page reload to take effect
🚩 Flag exportWizard reset to default (true)

stdout | src/utils/flags.test.ts > Enhanced Feature Flags System > Feature Flag Manager > should handle URL parameters correctly
🚩 Flag exportWizard set to false via URL
🚩 Flag collaborationUI set to true via URL

stdout | src/utils/flags.test.ts > Enhanced Feature Flags System > Feature Flag Manager > should export modified flags as URL parameters
🚩 Flag exportWizard set to false
🚩 Flag collaborationUI set to true
⚠️ Feature Enhanced Collaboration UI requires page reload to take effect

stdout | src/utils/flags.test.ts > Enhanced Feature Flags System > withFeatureFlag Utility > should return null when flag is disabled
🚩 Flag collaborationUI set to false
⚠️ Feature Enhanced Collaboration UI requires page reload to take effect

stdout | src/utils/flags.test.ts > Enhanced Feature Flags System > withFeatureFlag Utility > should return fallback when flag is disabled
🚩 Flag collaborationUI set to false
⚠️ Feature Enhanced Collaboration UI requires page reload to take effect

stdout | src/utils/flags.test.ts > Enhanced Feature Flags System > Debug Mode Features > should enable debug mode correctly
🚩 Flag performanceMonitoring set to true
🚩 Flag debugStorage set to true
🚩 Flag debugState set to true
🐛 Debug mode enabled - all debug flags activated

stdout | src/utils/flags.test.ts > Enhanced Feature Flags System > Debug Mode Features > should disable debug mode correctly
🚩 Flag performanceMonitoring set to true
🚩 Flag debugStorage set to true
🚩 Flag debugState set to true
🐛 Debug mode enabled - all debug flags activated
🚩 Flag performanceMonitoring set to false
🚩 Flag debugStorage set to false
🚩 Flag debugState set to false
🐛 Debug mode disabled

 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Service Status > should report service status correctly 1ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Service Status > should indicate mock mode in development 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Project Analysis > should analyze a project with default options 1ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Project Analysis > should analyze with custom options 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Project Analysis > should generate unique analysis IDs 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Project Analysis > should force mock mode when requested 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Analysis Structure > should have valid pacing analysis 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Analysis Structure > should have valid conflict analysis 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Analysis Structure > should have valid character analysis 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Analysis Structure > should have valid theme analysis 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Analysis Structure > should have valid suggestions 1ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Pacing Issues > should validate pacing issue structure 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Conflict Analysis > should validate conflict structure 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Character Analysis > should validate character data structure 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Character Analysis > should validate relationship structure 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Theme Analysis > should validate theme structure 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Analysis History > should return empty history for new project 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Save Analysis > should save analysis without error 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Error Handling > should handle invalid project ID gracefully 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Performance > should complete analysis in reasonable time 0ms
 ✓ src/services/aiPlotAnalysisService.test.ts > AI Plot Analysis Service > Performance > should handle multiple concurrent analyses 0ms
 ✓ src/utils/flags.test.ts > Enhanced Feature Flags System > New Feature Flags > should have Export Wizard flag 2ms
 ✓ src/utils/flags.test.ts > Enhanced Feature Flags System > New Feature Flags > should have AI Plot Analysis flag 0ms
 ✓ src/utils/flags.test.ts > Enhanced Feature Flags System > New Feature Flags > should have Insights Tab flag 0ms
 ✓ src/utils/flags.test.ts > Enhanced Feature Flags System > New Feature Flags > should have Enhanced Collaboration UI flag 0ms
 × src/utils/flags.test.ts > Enhanced Feature Flags System > Feature Flag Manager > should return correct default values for new flags 8ms
   → expected false to be true // Object.is equality
 × src/utils/flags.test.ts > Enhanced Feature Flags System > Feature Flag Manager > should allow setting flag values and persist them 2ms
   → expected undefined to be 'false' // Object.is equality
 × src/utils/flags.test.ts > Enhanced Feature Flags System > Feature Flag Manager > should reset flags to defaults 1ms
   → expected false to be true // Object.is equality
 ✓ src/utils/flags.test.ts > Enhanced Feature Flags System > Feature Flag Manager > should categorize flags correctly 1ms
 ✓ src/utils/flags.test.ts > Enhanced Feature Flags System > Feature Flag Manager > should handle URL parameters correctly 0ms
 ✓ src/utils/flags.test.ts > Enhanced Feature Flags System > Feature Flag Manager > should export modified flags as URL parameters 2ms
 × src/utils/flags.test.ts > Enhanced Feature Flags System > useFeatureFlag Hook > should return flag values correctly 0ms
   → expected false to be true // Object.is equality
 × src/utils/flags.test.ts > Enhanced Feature Flags System > withFeatureFlag Utility > should return component when flag is enabled 0ms
   → expected null to be 'TestComponent' // Object.is equality
 ✓ src/utils/flags.test.ts > Enhanced Feature Flags System > withFeatureFlag Utility > should return null when flag is disabled 0ms
 ✓ src/utils/flags.test.ts > Enhanced Feature Flags System > withFeatureFlag Utility > should return fallback when flag is disabled 0ms
 ✓ src/utils/flags.test.ts > Enhanced Feature Flags System > Debug Mode Features > should enable debug mode correctly 1ms
 ✓ src/utils/flags.test.ts > Enhanced Feature Flags System > Debug Mode Features > should disable debug mode correctly 0ms
 ✓ src/utils/flags.test.ts > Enhanced Feature Flags System > Unknown Flags Handling > should handle unknown flags gracefully 1ms
 ✓ src/utils/flags.test.ts > Enhanced Feature Flags System > Console Commands > should expose flag management functions in development 0ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > Icon Registry > should have consistent icon registry with expected icons 1ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > Icon Registry > should have all icons as valid React components 46ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > Size Variants > should have proper size classes defined 0ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > Size Variants > should apply correct size classes to rendered icons 10ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > Color Variants > should have proper color classes defined 0ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > Color Variants > should apply correct color classes to rendered icons 4ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > InkwellFeather Component > should render valid icon with default props 1ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > InkwellFeather Component > should apply custom className alongside default classes 1ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > InkwellFeather Component > should set proper accessibility attributes 1ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > InkwellFeather Component > should use default aria-label from icon name when not provided 1ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > InkwellFeather Component > should handle invalid icon names gracefully 1ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > InkwellFeather Component > should return null for invalid icon names 0ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > Icon Name Type Safety > should accept all valid icon names from registry 28ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > Integration Tests > should render different icon combinations correctly 2ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > Integration Tests > should handle edge cases with special characters in icon names 2ms
stdout | src/components/Onboarding/TourGating.test.tsx > Tour Gating + First-run Flow (A1) > Duplicate Tour Prevention > should prevent duplicate tour launches
[Analytics] tour_started: {
  timestamp: [33m1760138861885[39m,
  sessionId: [32m'session_1760138861817_id7ja0p0p'[39m,
  userId: [90mundefined[39m,
  profileId: [90mundefined[39m,
  version: [32m'1.0.0'[39m,
  platform: [32m'desktop'[39m,
  tourType: [32m'full-onboarding'[39m,
  entryPoint: [32m'tour_provider'[39m
}
Tour Analytics: tour_started { tourType: [32m'full-onboarding'[39m, stepCount: [33m8[39m, step: [33m0[39m }

stdout | src/components/Onboarding/TourGating.test.tsx > Tour Gating + First-run Flow (A1) > Duplicate Tour Prevention > should set session marker when tour starts
[Analytics] tour_started: {
  timestamp: [33m1760138861891[39m,
  sessionId: [32m'session_1760138861817_id7ja0p0p'[39m,
  userId: [90mundefined[39m,
  profileId: [90mundefined[39m,
  version: [32m'1.0.0'[39m,
  platform: [32m'desktop'[39m,
  tourType: [32m'full-onboarding'[39m,
  entryPoint: [32m'tour_provider'[39m
}
Tour Analytics: tour_started { tourType: [32m'full-onboarding'[39m, stepCount: [33m8[39m, step: [33m0[39m }

 ✓ src/components/Layout/MainLayout.footer.test.tsx > MainLayout Footer > should render the footer with Inkwell branding 57ms
 ✓ src/components/Layout/MainLayout.footer.test.tsx > MainLayout Footer > should position footer at bottom of main content 10ms
 ✓ src/components/Layout/MainLayout.footer.test.tsx > MainLayout Footer > should have proper styling for both light and dark modes 9ms
 ✓ src/components/Layout/MainLayout.footer.test.tsx > MainLayout Footer > should center the branding content 12ms
 ✓ src/components/Layout/MainLayout.footer.test.tsx > MainLayout Footer > should have appropriate text sizing and spacing 9ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > Performance > should render multiple icons efficiently 5ms
 ✓ src/components/icons/InkwellFeather.test.tsx > InkwellFeather Icon System > Exports > should export all necessary types and components 0ms
stdout | src/components/Onboarding/TourGating.test.tsx > Tour Gating + First-run Flow (A1) > Never Show Persistence > should persist never show again preference
[Analytics] tour_never_show_again: {
  timestamp: [33m1760138861908[39m,
  sessionId: [32m'session_1760138861817_id7ja0p0p'[39m,
  userId: [90mundefined[39m,
  profileId: [90mundefined[39m,
  version: [32m'1.0.0'[39m,
  platform: [32m'desktop'[39m,
  tourType: [32m'full-onboarding'[39m,
  step: [33m0[39m
}
Tour Analytics: tour_never_show_again { tourType: [32m'full-onboarding'[39m, step: [33m0[39m }

 ✓ src/components/Onboarding/TourGating.test.tsx > Tour Gating + First-run Flow (A1) > Duplicate Tour Prevention > should prevent duplicate tour launches 20ms
 ✓ src/components/Onboarding/TourGating.test.tsx > Tour Gating + First-run Flow (A1) > Duplicate Tour Prevention > should set session marker when tour starts 2ms
 ✓ src/components/Onboarding/TourGating.test.tsx > Tour Gating + First-run Flow (A1) > Duplicate Tour Prevention > should not show tour prompt if already prompted this session 1ms
 ✓ src/components/Onboarding/TourGating.test.tsx > Tour Gating + First-run Flow (A1) > First-run Flow Guards > should show prompt for first-time users 1ms
 ✓ src/components/Onboarding/TourGating.test.tsx > Tour Gating + First-run Flow (A1) > First-run Flow Guards > should not show prompt if user said never show again 1ms
 ✓ src/components/Onboarding/TourGating.test.tsx > Tour Gating + First-run Flow (A1) > First-run Flow Guards > should not show prompt during remind me later period 1ms
 ✓ src/components/Onboarding/TourGating.test.tsx > Tour Gating + First-run Flow (A1) > First-run Flow Guards > should show prompt after remind me later period expires 4ms
 × src/components/Onboarding/TourGating.test.tsx > Tour Gating + First-run Flow (A1) > OnboardingOrchestrator Session Guards > should prevent welcome modal from showing multiple times in same session 7ms
   → useTour must be used within a ProfileTourProvider
 ✓ src/components/Onboarding/TourGating.test.tsx > Tour Gating + First-run Flow (A1) > Never Show Persistence > should persist never show again preference 2ms
 ✓ src/components/Onboarding/TourGating.test.tsx > Tour Gating + First-run Flow (A1) > Target Element Waiting > should handle missing target elements gracefully 0ms

⎯⎯⎯⎯⎯⎯⎯ Failed Tests 6 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/utils/flags.test.ts > Enhanced Feature Flags System > Feature Flag Manager > should return correct default values for new flags
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/utils/flags.test.ts:55:54
     53|   describe('Feature Flag Manager', () => {
     54|     it('should return correct default values for new flags', () => {
     55|       expect(featureFlags.isEnabled('exportWizard')).toBe(true);
       |                                                      ^
     56|       expect(featureFlags.isEnabled('aiPlotAnalysis')).toBe(true);
     57|       expect(featureFlags.isEnabled('insightsTab')).toBe(true);

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/6]⎯

 FAIL  src/utils/flags.test.ts > Enhanced Feature Flags System > Feature Flag Manager > should allow setting flag values and persist them
AssertionError: expected undefined to be 'false' // Object.is equality

[32m- Expected:[39m 
"false"

[31m+ Received:[39m 
undefined

 ❯ src/utils/flags.test.ts:65:65
     63|       featureFlags.setEnabled('exportWizard', false);
     64|       expect(featureFlags.isEnabled('exportWizard')).toBe(false);
     65|       expect(localStorage.getItem('inkwell_flag_exportWizard')).toBe('…
       |                                                                 ^
     66| 
     67|       // Test setting a flag to true

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/6]⎯

 FAIL  src/utils/flags.test.ts > Enhanced Feature Flags System > Feature Flag Manager > should reset flags to defaults
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/utils/flags.test.ts:80:54
     78|       // Reset specific flag
     79|       featureFlags.reset('exportWizard');
     80|       expect(featureFlags.isEnabled('exportWizard')).toBe(true); // De…
       |                                                      ^
     81|       expect(localStorage.getItem('inkwell_flag_exportWizard')).toBeNu…
     82| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/6]⎯

 FAIL  src/utils/flags.test.ts > Enhanced Feature Flags System > useFeatureFlag Hook > should return flag values correctly
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/utils/flags.test.ts:135:46
    133|   describe('useFeatureFlag Hook', () => {
    134|     it('should return flag values correctly', () => {
    135|       expect(useFeatureFlag('exportWizard')).toBe(true);
       |                                              ^
    136|       expect(useFeatureFlag('collaborationUI')).toBe(false);
    137| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/6]⎯

 FAIL  src/utils/flags.test.ts > Enhanced Feature Flags System > withFeatureFlag Utility > should return component when flag is enabled
AssertionError: expected null to be 'TestComponent' // Object.is equality

[32m- Expected:[39m 
"TestComponent"

[31m+ Received:[39m 
null

 ❯ src/utils/flags.test.ts:148:22
    146|       const TestComponent = 'TestComponent';
    147|       const result = withFeatureFlag('exportWizard', TestComponent);
    148|       expect(result).toBe(TestComponent);
       |                      ^
    149|     });
    150| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/6]⎯

 FAIL  src/components/Onboarding/TourGating.test.tsx > Tour Gating + First-run Flow (A1) > OnboardingOrchestrator Session Guards > should prevent welcome modal from showing multiple times in same session
Error: useTour must be used within a ProfileTourProvider
 ❯ useTour src/components/Onboarding/ProfileTourProvider.tsx:548:11
    546|   const context = useContext(TourContext);
    547|   if (!context) {
    548|     throw new Error('useTour must be used within a ProfileTourProvider…
       |           ^
    549|   }
    550|   return context;
 ❯ WelcomeModal src/components/Onboarding/WelcomeModal.tsx:24:89
 ❯ Object.react-stack-bottom-frame node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/cjs/react-dom-client.development.js:14936:11

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/6]⎯


 Test Files  2 failed | 3 passed (5)
      Tests  6 failed | 65 passed (71)
   Start at  18:27:40
   Duration  1.83s (transform 326ms, setup 541ms, collect 931ms, tests 267ms, environment 1.91s, prepare 486ms)

 ELIFECYCLE  Command failed with exit code 1.
