// src/components/Writing/WhiteEditor.tsx import React, { forwardRef } from 'react'; import { cn } from '@/utils/cn'; export interface WhiteEditorProps { value: string; onChange: (val: string) => void; onTextSelect?: () => void; placeholder?: string; disabled?: boolean; className?: string; } const WhiteEditor = forwardRef<HTMLDivElement, WhiteEditorProps>( ( { value, onChange, onTextSelect, placeholder = 'Start writing...', disabled = false, className, }, ref, ) => { return ( <div className="rounded-xl border border-slate-200 bg-white p-4 shadow-sm"> <div ref={ref} contentEditable={!disabled} suppressContentEditableWarning={true} className={cn( 'prose max-w-none min-h-[60vh] bg-white text-slate-900 focus:outline-none', 'placeholder:text-slate-400', disabled && 'cursor-not-allowed opacity-50', className, )} style={{ // Force white background and black text regardless of theme backgroundColor: '#ffffff', color: '#0f172a', // slate-900 }} onInput={(e) => { const target = e.currentTarget; onChange(target.textContent || ''); }} onSelect={onTextSelect} data-placeholder={placeholder} > {value} </div> </div> ); }, ); WhiteEditor.displayName = 'WhiteEditor'; export default WhiteEditor; 