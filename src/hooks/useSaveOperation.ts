// src/hooks/useSaveOperation.ts import { useState, useRef } from 'react'; type SaveFn = () => Promise<{ success: boolean }>; export function _useSaveOperation() { const [isSaving, setIsSaving] = useState(false); const lastSavedRef = useRef<Date | null>(null); const save = async (_fn: SaveFn) => { setIsSaving(true); try { const result = await fn(); if (result?.success) lastSavedRef.current = new Date(); return result; } finally { setIsSaving(false); } }; return { isSaving, save, lastSaved: lastSavedRef.current, }; }
