[
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/App.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/AppProviders.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/__tests__/smoke/brand-ui.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/api/__tests__/edge-auth.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/boot/globalErrors.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/boot/waitForRoot.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/AI/AiSettingsPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/AI/ContextAwarePrompts.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/AI/JustInTimeAI.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/AccessibleTabs.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Analytics/Charts.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Analytics/LineChartImpl.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Analytics/PhraseHygieneWidget.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Analytics/SidebarGoalsWidget.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Analytics/WritingAnalyticsView.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Analytics/WritingGoalsWidget.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Auth/AuthFooter.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Auth/AuthForm.tsx",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'primaryCtaLabel' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 82,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 82,
        "endColumn": 18
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 1,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useEffect, useState } from 'react';\n\nimport { supabase } from '@/lib/supabaseClient';\nimport { useGo } from '@/utils/navigate';\nimport { normalizeSafeRedirect } from '@/utils/safeRedirect';\n\nexport type AuthFormMode = 'signin' | 'signup';\n\n/**\n * Maps raw Supabase error messages to user-friendly descriptions\n */\nfunction getAuthErrorMessage(\n  rawMessage: string,\n  mode: AuthFormMode,\n  tab: 'password' | 'magic',\n): string {\n  const lower = rawMessage.toLowerCase();\n\n  // Invalid credentials\n  if (lower.includes('invalid') && (lower.includes('credentials') || lower.includes('login'))) {\n    return 'The email or password you entered is incorrect. Please try again.';\n  }\n\n  // User not found\n  if (lower.includes('user') && lower.includes('not found')) {\n    return mode === 'signin'\n      ? \"We couldn't find an account with that email. Please check your email or sign up.\"\n      : 'Unable to create account. Please try again.';\n  }\n\n  // Email already registered\n  if (lower.includes('already') && lower.includes('registered')) {\n    return 'An account with this email already exists. Try signing in instead.';\n  }\n\n  // Invalid email format\n  if (lower.includes('invalid') && lower.includes('email')) {\n    return 'Please enter a valid email address (e.g., you@example.com).';\n  }\n\n  // Password too weak\n  if (lower.includes('password') && (lower.includes('weak') || lower.includes('strength'))) {\n    return 'Please choose a stronger password with at least 8 characters, including letters and numbers.';\n  }\n\n  // Rate limiting\n  if (lower.includes('rate limit') || lower.includes('too many')) {\n    return 'Too many attempts. Please wait a few minutes before trying again.';\n  }\n\n  // Email sending issues\n  if (lower.includes('email') && (lower.includes('send') || lower.includes('deliver'))) {\n    return 'Unable to send email. Please check your email address and try again.';\n  }\n\n  // Network issues\n  if (lower.includes('network') || lower.includes('connection') || lower.includes('timeout')) {\n    return 'Connection issue. Please check your internet connection and try again.';\n  }\n\n  // Magic link specific\n  if (tab === 'magic' && lower.includes('otp')) {\n    return 'Unable to send magic link. Please try again or use email & password sign in.';\n  }\n\n  // Signup specific - email confirmation\n  if (mode === 'signup' && lower.includes('confirm')) {\n    return 'Please check your email to confirm your account before signing in.';\n  }\n\n  // Generic fallback with more helpful context\n  if (rawMessage) {\n    return `Authentication error: ${rawMessage}. Please try again or contact support if the issue persists.`;\n  }\n\n  return 'Something went wrong. Please try again or contact support if the issue persists.';\n}\n\nexport function AuthForm({\n  mode,\n  redirect,\n  primaryCtaLabel,\n}: {\n  mode: AuthFormMode;\n  redirect: string;\n  primaryCtaLabel: string;\n}) {\n  const go = useGo();\n  const [activeTab, setActiveTab] = useState<'password' | 'magic'>('password');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [err, setErr] = useState<string | null>(null);\n  const [notice, setNotice] = useState<string | null>(null);\n\n  // Default tab is password on every mount and route\n  useEffect(() => {\n    setActiveTab('password');\n  }, [mode]);\n\n  // Prepare the callback URL for auth redirects - ensure we use the consistent naming for params\n  const emailRedirectTo = `${window.location.origin}/auth/callback?next=${encodeURIComponent(redirect)}`;\n\n  // Mode-specific validation and submission logic\n  const handleSignIn = async () => {\n    if (activeTab === 'password') {\n      // Sign in with email/password\n      const { error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      });\n\n      if (error) throw error;\n      go(normalizeSafeRedirect(redirect));\n      return;\n    } else {\n      // Magic Link flow (only available for sign-in)\n      const { error } = await supabase.auth.signInWithOtp({\n        email,\n        options: {\n          emailRedirectTo,\n        },\n      });\n\n      if (error) throw error;\n      setNotice('Magic link sent. Check your email.');\n      // Optional: redirect to a \"check email\" page instead\n      // go('/check-email?mode=signin', { replace: true });\n    }\n  };\n\n  const handleSignUp = async () => {\n    // Sign up requires email/password validation\n    if (!password || password.length < 8) {\n      setErr('Use at least 8 characters.');\n      return false;\n    }\n\n    if (password !== confirm) {\n      setErr('Passwords do not match.');\n      return false;\n    }\n\n    // Create new account with optional full name\n    const { error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        emailRedirectTo,\n        data: { full_name: fullName || undefined },\n      },\n    });\n\n    if (error) throw error;\n\n    // If using email confirmation (recommended), show a message\n    setNotice('Check your email to confirm your account.');\n    // Optional: redirect to a \"check email\" page instead\n    // go('/check-email?mode=signup', { replace: true });\n\n    return true;\n  };\n\n  const onSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setErr(null);\n    setNotice(null);\n    setLoading(true);\n\n    try {\n      if (mode === 'signup') {\n        await handleSignUp();\n      } else {\n        await handleSignIn();\n      }\n    } catch (e: any) {\n      // Map Supabase errors to user-friendly messages\n      const errorMessage = getAuthErrorMessage(e?.message || '', mode, activeTab);\n      setErr(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const showConfirm = mode === 'signup' && activeTab === 'password';\n\n  // Mode-specific UI helpers\n  const tabBtn = (k: 'password' | 'magic', label: string) => (\n    <button\n      type=\"button\"\n      onClick={() => setActiveTab(k)}\n      className={`px-3 py-2 text-sm font-medium ${activeTab === k ? 'text-[#13294B] border-b-2 border-[#D4AF37]' : 'text-slate-500'}`}\n      aria-pressed={activeTab === k}\n    >\n      {label}\n    </button>\n  );\n\n  // Mode-specific labels and hints\n  const emailPlaceholder = mode === 'signin' ? 'Enter your email' : 'Enter your email address';\n  const passwordPlaceholder =\n    mode === 'signin' ? 'Enter your password' : 'Create a strong password';\n  const passwordLabel = mode === 'signin' ? 'Password' : 'Create password';\n\n  return (\n    <form onSubmit={onSubmit} className=\"space-y-5\">\n      {/* Tab selector - only show Magic Link option for sign-in */}\n      <div className=\"flex items-center gap-4 border-b pb-2\">\n        {tabBtn('password', 'Email & Password')}\n        {mode === 'signin' && (\n          <>\n            <span className=\"h-5 w-px bg-slate-200\" />\n            {tabBtn('magic', 'Magic Link')}\n          </>\n        )}\n      </div>\n\n      <div className=\"space-y-4\">\n        {/* Full Name field - only for sign-up */}\n        {mode === 'signup' && (\n          <div>\n            <label htmlFor=\"fullname-input\" className=\"block text-sm font-medium text-slate-700\">\n              Full name\n            </label>\n            <input\n              id=\"fullname-input\"\n              type=\"text\"\n              value={fullName}\n              onChange={(e) => setFullName(e.target.value)}\n              className=\"mt-1 w-full rounded-lg border border-slate-300 px-3 py-2 outline-none focus:ring-2 focus:ring-[#D4AF37]\"\n              autoComplete=\"name\"\n              placeholder=\"Enter your full name\"\n            />\n          </div>\n        )}\n\n        {/* Email field - common to both modes */}\n        <div>\n          <label htmlFor=\"email-input\" className=\"block text-sm font-medium text-slate-700\">\n            Email address\n          </label>\n          <input\n            id=\"email-input\"\n            required\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"mt-1 w-full rounded-lg border border-slate-300 px-3 py-2 outline-none focus:ring-2 focus:ring-[#D4AF37]\"\n            autoComplete=\"email\"\n            placeholder={emailPlaceholder}\n          />\n        </div>\n\n        {activeTab === 'password' && (\n          <>\n            <div>\n              <label htmlFor=\"password-input\" className=\"block text-sm font-medium text-slate-700\">\n                {passwordLabel}\n              </label>\n              <input\n                id=\"password-input\"\n                required\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                className=\"mt-1 w-full rounded-lg border border-slate-300 px-3 py-2 outline-none focus:ring-2 focus:ring-[#D4AF37]\"\n                autoComplete={mode === 'signup' ? 'new-password' : 'current-password'}\n                placeholder={passwordPlaceholder}\n                minLength={mode === 'signup' ? 8 : undefined}\n              />\n              {mode === 'signin' && (\n                <div className=\"mt-2 text-right\">\n                  <a\n                    href=\"/auth/forgot-password\"\n                    className=\"text-sm text-[#13294B] hover:underline\"\n                  >\n                    Forgot your password?\n                  </a>\n                </div>\n              )}\n            </div>\n\n            {showConfirm && (\n              <div>\n                <label\n                  htmlFor=\"confirm-password-input\"\n                  className=\"block text-sm font-medium text-slate-700\"\n                >\n                  Confirm password\n                </label>\n                <input\n                  id=\"confirm-password-input\"\n                  required\n                  type=\"password\"\n                  value={confirm}\n                  onChange={(e) => setConfirm(e.target.value)}\n                  className=\"mt-1 w-full rounded-lg border border-slate-300 px-3 py-2 outline-none focus:ring-2 focus:ring-[#D4AF37]\"\n                  autoComplete=\"new-password\"\n                  placeholder=\"Confirm your password\"\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n\n      {/* Error and notification handling */}\n      {err && <p className=\"text-sm text-red-600\">{err}</p>}\n      {notice && <p className=\"text-sm text-emerald-700\">{notice}</p>}\n\n      {/* Mode-specific submission button */}\n      <button\n        type=\"submit\"\n        disabled={loading}\n        className={`w-full rounded-xl bg-[#13294B] text-white px-4 py-3 font-semibold ring-1 ring-black/5 hover:opacity-90 disabled:opacity-60`}\n        data-testid={`${mode}-button`}\n      >\n        {loading\n          ? 'Please wait…'\n          : mode === 'signup'\n            ? 'Create account'\n            : activeTab === 'password'\n              ? 'Sign in'\n              : 'Send magic link'}\n      </button>\n\n      {/* Mode-specific helper text */}\n      {mode === 'signin' && activeTab === 'password' && (\n        <p className=\"text-center text-xs text-slate-500\">\n          Trouble signing in? Try the Magic Link tab for password-free sign in.\n        </p>\n      )}\n      {mode === 'signin' && activeTab === 'magic' && (\n        <p className=\"text-center text-xs text-slate-500\">\n          We'll email you a secure link for password-free access to your account.\n        </p>\n      )}\n      {mode === 'signup' && (\n        <p className=\"text-center text-xs text-slate-500\">\n          By creating an account, you agree to our Terms of Service and Privacy Policy.\n        </p>\n      )}\n\n      {/* Account switching links removed - now handled by AuthFooter component */}\n    </form>\n  );\n}\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Auth/AuthGate.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Auth/AuthHeader.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Auth/__tests__/AuthForm.smoke.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/BackupPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Badges/ExportReadyBadge.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Badges/ExportReadyBadge.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Badges/LocalFirstBadge.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Brand/Brand.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Brand/BrandMark.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Brand/BrandShowcase.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Brand/BrandThemeProvider.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Brand/InkwellLogo.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Brand/InkwellLogo.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Brand/InkwellSplash.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Brand/constants.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Brand/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Claude/AboutClaudeModal.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Claude/AnalysisPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Claude/ChatPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Claude/ConsistencyGuardianPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Claude/LoadingIndicator.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Claude/QuickActionsPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Claude/StatusBadge.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Claude/TypingIndicator.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Claude/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Claude/useTabShortcuts.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ClaudeAssistant.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ClaudeErrorBoundary.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/CommandPalette/CommandPalette.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/CommandPalette/CommandPaletteProvider.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/CommandPalette/CommandPaletteUI.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/CommandPalette/useCommands.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Dashboard/EnhancedDashboard.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Dashboard/EnhancedDashboard.tsx",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'newProjectDialogOpen' is assigned a value but never used. Allowed unused vars must match /^_/u.",
        "line": 16,
        "column": 11,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 16,
        "endColumn": 31
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'closeNewProjectDialog' is assigned a value but never used. Allowed unused vars must match /^_/u.",
        "line": 16,
        "column": 55,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 16,
        "endColumn": 76
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 2,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "// src/components/Dashboard/EnhancedDashboard.tsx\nimport { PlusCircle, FileText, BarChart3, Target, Zap, Star, ArrowRight, X } from 'lucide-react';\nimport React, { useState, useEffect } from 'react';\n\nimport { InkwellFeather } from '@/components/icons';\nimport type { InkwellIconName } from '@/components/icons/InkwellFeather';\nimport StatusChip from '@/components/Storage/StatusChip';\nimport { StorageHealthWidget } from '@/components/Storage/StorageHealthWidget';\nimport { useAppContext, View } from '@/context/AppContext';\nimport { useTourStartupFromUrl } from '@/hooks/useTourStartupFromUrl';\nimport { useUI } from '@/hooks/useUI';\nimport { triggerOnProjectCreated } from '@/utils/tourTriggers';\n\nconst EnhancedDashboard: React.FC = () => {\n  const { state, currentProject, addProject, setCurrentProjectId, dispatch } = useAppContext();\n  const { newProjectDialogOpen, openNewProjectDialog, closeNewProjectDialog } = useUI();\n  const [storageModalOpen, setStorageModalOpen] = useState(false);\n\n  // Check for tour=start in URL and trigger tour if found\n  useTourStartupFromUrl();\n\n  // Handle URL parameter and keyboard shortcut for storage modal\n  useEffect(() => {\n    // Check for ?storage=1 in URL\n    if (new URLSearchParams(window.location.search).get('storage') === '1') {\n      setStorageModalOpen(true);\n    }\n\n    // Keyboard shortcut: Cmd/Ctrl + Shift + S\n    const onKey = (e: KeyboardEvent) => {\n      if ((e.ctrlKey || e.metaKey) && e.shiftKey && e.key.toLowerCase() === 's') {\n        e.preventDefault();\n        setStorageModalOpen((v) => !v);\n      }\n    };\n    window.addEventListener('keydown', onKey);\n    return () => window.removeEventListener('keydown', onKey);\n  }, []);\n\n  const _createNewProject = async () => {\n    try {\n      const newProject = {\n        id: `project-${Date.now()}`,\n        name: `New Story ${state.projects.length + 1}`,\n        description: 'A new fiction project',\n        content: '',\n        createdAt: Date.now(),\n        updatedAt: Date.now(),\n      };\n\n      addProject({ ...newProject, chapters: [], characters: [], beatSheet: [] });\n      setCurrentProjectId(newProject.id);\n\n      // Fire tour trigger for project creation\n      triggerOnProjectCreated(newProject.id);\n\n      // Auto-navigate to writing after creation\n      setTimeout(() => {\n        dispatch({ type: 'SET_VIEW', payload: View.Writing });\n      }, 500);\n    } catch (error) {\n      console.error('Failed to create project:', error);\n    }\n  };\n\n  const navigateToView = (view: View) => {\n    dispatch({ type: 'SET_VIEW', payload: view });\n  };\n\n  const formatDate = (timestamp: number) => {\n    return new Date(timestamp).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n    });\n  };\n\n  const getProjectWordCount = (project: any) => {\n    if (!project.content) return 0;\n    return project.content.split(' ').filter((word: string) => word.length > 0).length;\n  };\n\n  const getDaysAgo = (timestamp: number) => {\n    const days = Math.floor((Date.now() - timestamp) / (1000 * 60 * 60 * 24));\n    if (days === 0) return 'Today';\n    if (days === 1) return '1 day ago';\n    return `${days} days ago`;\n  };\n\n  const quickActions = [\n    {\n      id: 'new-project',\n      title: 'Create New Project',\n      description: 'Start a fresh writing project with templates and structure',\n      icon: PlusCircle,\n      color: 'bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400',\n      action: () => openNewProjectDialog(),\n    },\n    {\n      id: 'continue-writing',\n      title: 'Continue Writing',\n      description: 'Pick up where you left off in your current project',\n      icon: FileText,\n      color: 'bg-green-50 dark:bg-green-900/20 text-green-600 dark:text-green-400',\n      action: () => navigateToView(View.Writing),\n      disabled: !currentProject,\n    },\n    {\n      id: 'view-analytics',\n      title: 'View Analytics',\n      description: 'Check your writing progress and statistics',\n      icon: BarChart3,\n      color: 'bg-purple-50 dark:bg-purple-900/20 text-purple-600 dark:text-purple-400',\n      action: () => navigateToView(View.Analysis),\n    },\n    {\n      id: 'plan-story',\n      title: 'Plan Your Story',\n      description: 'Organize characters, plots, and story structure',\n      icon: () => <InkwellFeather name={'planning' as InkwellIconName} size=\"sm\" />,\n      color: 'bg-orange-50 dark:bg-orange-900/20 text-orange-600 dark:text-orange-400',\n      action: () => navigateToView(View.Planning),\n    },\n  ];\n\n  // If no projects exist, show onboarding\n  if (state.projects.length === 0) {\n    return (\n      <div className=\"enhanced-dashboard fade-in\">\n        <div className=\"max-w-4xl mx-auto text-center py-16\">\n          {/* Welcome Header */}\n          <div className=\"mb-12\">\n            <div className=\"w-20 h-20 bg-primary-100 dark:bg-primary-900/30 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <InkwellFeather name=\"writing\" size=\"2xl\" color=\"primary\" />\n            </div>\n            <h1 className=\"text-4xl font-bold text-slate-900 dark:text-white mb-4\">\n              Welcome to Inkwell\n            </h1>\n            <p className=\"text-lg text-slate-600 dark:text-slate-300 max-w-2xl mx-auto\">\n              Your professional writing companion. Create compelling stories, track your progress,\n              and achieve your writing goals with powerful tools designed for serious writers.\n            </p>\n          </div>\n\n          {/* Getting Started */}\n          <div className=\"bg-white dark:bg-slate-800 rounded-xl shadow-sm border border-slate-200 dark:border-slate-700 p-8 mb-8\">\n            <h2 className=\"text-2xl font-semibold text-slate-900 dark:text-white mb-6\">\n              Let's get you started\n            </h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n              <div className=\"text-center p-4\">\n                <div className=\"w-12 h-12 bg-blue-100 dark:bg-blue-900/30 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <span className=\"text-xl\">📝</span>\n                </div>\n                <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-2\">\n                  Create\n                </h3>\n                <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n                  Start a new project with our guided setup\n                </p>\n              </div>\n              <div className=\"text-center p-4\">\n                <div className=\"w-12 h-12 bg-green-100 dark:bg-green-900/30 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <span className=\"text-xl\">✍️</span>\n                </div>\n                <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-2\">Write</h3>\n                <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n                  Focus on your story with our distraction-free editor\n                </p>\n              </div>\n              <div className=\"text-center p-4\">\n                <div className=\"w-12 h-12 bg-purple-100 dark:bg-purple-900/30 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <span className=\"text-xl\">📊</span>\n                </div>\n                <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-2\">Track</h3>\n                <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n                  Monitor progress and celebrate milestones\n                </p>\n              </div>\n            </div>\n            <button\n              onClick={openNewProjectDialog}\n              className=\"btn btn-primary btn-lg\"\n              type=\"button\"\n              data-test=\"create-first-project\"\n              data-tour-id=\"create-project-button\"\n            >\n              <PlusCircle className=\"w-5 h-5\" />\n              Create Your First Project\n            </button>\n          </div>\n\n          {/* Features Preview */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 text-left\">\n            <div className=\"card p-6\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"w-10 h-10 bg-blue-100 dark:bg-blue-900/30 rounded-lg flex items-center justify-center flex-shrink-0\">\n                  <Target className=\"w-5 h-5 text-blue-600 dark:text-blue-400\" />\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-2\">\n                    Goal Tracking\n                  </h3>\n                  <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n                    Set daily word count goals and track your writing streaks\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"card p-6\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"w-10 h-10 bg-green-100 dark:bg-green-900/30 rounded-lg flex items-center justify-center flex-shrink-0\">\n                  <Zap className=\"w-5 h-5 text-green-600 dark:text-green-400\" />\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-2\">\n                    Smart Analytics\n                  </h3>\n                  <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n                    Get insights into your writing patterns and productivity\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"enhanced-dashboard fade-in\">\n      {/* Header */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <h1 className=\"text-4xl font-bold text-slate-900 dark:text-white\">Dashboard</h1>\n          <div className=\"flex items-center gap-3\">\n            <StatusChip onClick={() => setStorageModalOpen(true)} />\n            <button\n              onClick={openNewProjectDialog}\n              className=\"btn btn-primary\"\n              type=\"button\"\n              data-test=\"new-project\"\n              data-tour-id=\"new-project-button\"\n            >\n              <PlusCircle className=\"w-4 h-4\" />\n              New Project\n            </button>\n          </div>\n        </div>\n        <p className=\"text-base text-slate-600 dark:text-slate-400\">\n          Welcome back! Here's your writing overview and recent activity.\n        </p>\n      </div>\n\n      {/* Storage Health Modal */}\n      {storageModalOpen && (\n        <div\n          role=\"dialog\"\n          aria-modal=\"true\"\n          className=\"fixed inset-0 z-50 flex items-center justify-center p-4\"\n        >\n          <div\n            className=\"absolute inset-0 bg-black/40 backdrop-blur-sm\"\n            onClick={() => setStorageModalOpen(false)}\n          />\n          <div className=\"relative z-10 w-[680px] max-w-[92vw] rounded-2xl border border-slate-200 bg-white p-6 shadow-2xl dark:border-slate-700 dark:bg-slate-900\">\n            <div className=\"mb-4 flex items-center justify-between\">\n              <h2 className=\"text-2xl font-semibold text-slate-900 dark:text-white\">\n                Storage Health\n              </h2>\n              <button\n                className=\"rounded-lg border border-slate-300 bg-white px-3 py-1.5 text-sm font-medium text-slate-700 transition-colors hover:bg-slate-50 dark:border-slate-600 dark:bg-slate-800 dark:text-slate-300 dark:hover:bg-slate-700\"\n                onClick={() => setStorageModalOpen(false)}\n                aria-label=\"Close storage health modal\"\n              >\n                <X className=\"h-4 w-4\" />\n              </button>\n            </div>\n            <p className=\"mb-6 text-sm text-slate-600 dark:text-slate-400\">\n              Monitor your browser storage status, persistence, and quota usage. Press{' '}\n              <kbd className=\"rounded bg-slate-100 px-1.5 py-0.5 text-xs font-medium dark:bg-slate-800\">\n                Cmd/Ctrl+Shift+S\n              </kbd>{' '}\n              to toggle this panel.\n            </p>\n\n            <StorageHealthWidget />\n          </div>\n        </div>\n      )}\n\n      {/* Current Project Highlight */}\n      {currentProject && (\n        <div className=\"card card-interactive mb-8\" onClick={() => navigateToView(View.Writing)}>\n          <div className=\"card-content\">\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"w-12 h-12 bg-primary-100 dark:bg-primary-900/30 rounded-lg flex items-center justify-center flex-shrink-0\">\n                  <InkwellFeather name=\"writing\" size=\"lg\" color=\"primary\" />\n                </div>\n                <div>\n                  <h2 className=\"text-2xl font-semibold text-slate-900 dark:text-white mb-1\">\n                    {currentProject.name}\n                  </h2>\n                  <p className=\"text-sm text-slate-600 dark:text-slate-400 mb-2\">\n                    {currentProject.description}\n                  </p>\n                  <div className=\"flex items-center gap-4 text-xs text-slate-500\">\n                    <span>Last updated {getDaysAgo(currentProject.updatedAt)}</span>\n                    <span>•</span>\n                    <span>{getProjectWordCount(currentProject)} words</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2 text-primary-600 dark:text-primary-400\">\n                <span className=\"text-sm font-medium\">Continue writing</span>\n                <ArrowRight className=\"w-4 h-4\" />\n              </div>\n            </div>\n\n            {/* Project Stats */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 pt-4 border-t border-slate-200 dark:border-slate-700\">\n              <div className=\"text-center\">\n                <div className=\"text-xl font-semibold text-slate-900 dark:text-white mb-1\">\n                  {getProjectWordCount(currentProject).toLocaleString()}\n                </div>\n                <div className=\"text-xs text-slate-500\">Total Words</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-xl font-semibold text-slate-900 dark:text-white mb-1\">\n                  {currentProject.chapters?.length || 0}\n                </div>\n                <div className=\"text-xs text-slate-500\">Chapters</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-xl font-semibold text-slate-900 dark:text-white mb-1\">\n                  {currentProject.characters?.length || 0}\n                </div>\n                <div className=\"text-xs text-slate-500\">Characters</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-xl font-semibold text-green-600 dark:text-green-400 mb-1\">\n                  85%\n                </div>\n                <div className=\"text-xs text-slate-500\">Progress</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Quick Actions */}\n      <div className=\"mb-8\">\n        <h2 className=\"text-2xl font-semibold text-slate-900 dark:text-white mb-4\">\n          Quick Actions\n        </h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {quickActions.map((action) => {\n            const Icon = action.icon;\n            return (\n              <button\n                key={action.id}\n                onClick={action.action}\n                disabled={action.disabled}\n                className={`card card-interactive text-left p-4 ${\n                  action.disabled ? 'opacity-50 cursor-not-allowed' : ''\n                }`}\n              >\n                <div className=\"flex items-start gap-3 mb-3\">\n                  <div\n                    className={`w-10 h-10 rounded-lg flex items-center justify-center ${action.color}`}\n                  >\n                    <Icon className=\"w-5 h-5\" />\n                  </div>\n                </div>\n                <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-2\">\n                  {action.title}\n                </h3>\n                <p className=\"text-sm text-slate-600 dark:text-slate-400\">{action.description}</p>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Recent Projects */}\n      {state.projects.length > 1 && (\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-2xl font-semibold text-slate-900 dark:text-white\">\n              Recent Projects\n            </h2>\n            <button className=\"btn btn-ghost btn-sm\">View All</button>\n          </div>\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n            {state.projects\n              .filter((project) => project.id !== currentProject?.id)\n              .slice(0, 4)\n              .map((project) => (\n                <div\n                  key={project.id}\n                  className=\"card card-interactive\"\n                  onClick={() => setCurrentProjectId(project.id)}\n                >\n                  <div className=\"card-content\">\n                    <div className=\"flex items-start justify-between mb-3\">\n                      <div className=\"flex-1 min-w-0\">\n                        <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-1 truncate\">\n                          {project.name}\n                        </h3>\n                        <p className=\"text-sm text-slate-600 dark:text-slate-400 line-clamp-2\">\n                          {project.description}\n                        </p>\n                      </div>\n                      <div className=\"ml-3 flex-shrink-0\">\n                        <div className=\"w-8 h-8 bg-slate-100 dark:bg-slate-700 rounded-lg flex items-center justify-center\">\n                          <FileText className=\"w-4 h-4 text-slate-600 dark:text-slate-400\" />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center justify-between text-xs text-slate-500\">\n                      <span>{formatDate(project.updatedAt)}</span>\n                      <span>{getProjectWordCount(project)} words</span>\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      )}\n\n      {/* Writing Streak & Goals */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <div className=\"w-10 h-10 bg-orange-100 dark:bg-orange-900/30 rounded-lg flex items-center justify-center\">\n                <Star className=\"w-5 h-5 text-orange-600 dark:text-orange-400\" />\n              </div>\n              <div>\n                <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white\">\n                  Writing Streak\n                </h3>\n                <p className=\"text-xs text-slate-500\">Keep the momentum going!</p>\n              </div>\n            </div>\n            <div className=\"text-center py-4\">\n              <div className=\"text-4xl font-bold text-orange-600 dark:text-orange-400 mb-2\">7</div>\n              <div className=\"text-sm text-slate-600 dark:text-slate-400\">Days in a row</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <div className=\"w-10 h-10 bg-green-100 dark:bg-green-900/30 rounded-lg flex items-center justify-center\">\n                <Target className=\"w-5 h-5 text-green-600 dark:text-green-400\" />\n              </div>\n              <div>\n                <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white\">\n                  Today's Goal\n                </h3>\n                <p className=\"text-xs text-slate-500\">\n                  {new Date().toLocaleDateString('en-US', {\n                    weekday: 'long',\n                    month: 'short',\n                    day: 'numeric',\n                  })}\n                </p>\n              </div>\n            </div>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-slate-600 dark:text-slate-400\">Progress</span>\n                <span className=\"font-medium text-slate-900 dark:text-white\">\n                  750 / 1,000 words\n                </span>\n              </div>\n              <div className=\"progress\">\n                <div className=\"progress-bar\" style={{ width: '75%' }} />\n              </div>\n              <p className=\"text-xs text-green-600 dark:text-green-400\">250 words to go!</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EnhancedDashboard;\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Dashboard/Welcome.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Dashboard/__tests__/EnhancedDashboard.resolver.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Debug/StorageDebugPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/DebugSearchPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/EmptyStates/ProfessionalEmptyStates.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/EmptyStates/TeachingEmptyState.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ErrorBoundary/AppErrorBoundary.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ErrorBoundary/PanelErrorFallbacks.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ErrorBoundary/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Export/ExportQualityDashboard.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ExportDialog.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ExportWizard/DownloadCard.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ExportWizard/ExportWizard.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ExportWizard/ExportWizardModal.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ExportWizard/FormatStep.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ExportWizard/ProgressBar.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ExportWizard/ProofreadStep.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ExportWizard/ReviewStep.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ExportWizard/StyleStep.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/HealthCheck.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Layout.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Layout/AppShell.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Layout/BrandHeader.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Layout/Footer.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Layout/FooterLight.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Layout/MainLayout.footer.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Layout/MainLayout.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Layout/MainLayout.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Layout/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/LegacyRedirects.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Logo.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/MessageBubble.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Modals/AccountMenu.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Modals/NotificationsModal.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Modals/ShortcutsModal.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Navigation/HelpMenu.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Navigation/PowerToolsMenu.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/NotificationsPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Nudges/ActivationNudge.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Offline/OfflineQueueModal.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/CompletionChecklist.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/CompletionChecklistNew.tsx",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'setChecklist' is assigned a value but never used. Allowed unused vars must match /^_/u.",
        "line": 97,
        "column": 21,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 97,
        "endColumn": 33
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 1,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "/**\n * CompletionChecklist - Progress tracking for onboarding\n *\n * Simplified version that works without TourProvider context.\n * Uses localStorage directly for checklist state.\n */\n\nimport {\n  CheckCircle2,\n  Circle,\n  Trophy,\n  Target,\n  BookOpen,\n  Users,\n  FileText,\n  BarChart3,\n  Sparkles,\n} from 'lucide-react';\nimport React, { useState, useEffect } from 'react';\n\nimport analyticsService from '@/services/analyticsService';\nimport { isTourDone } from '@/tour/persistence';\n\ninterface ChecklistItemConfig {\n  key: string;\n  label: string;\n  description: string;\n  icon: React.ElementType;\n  tourTrigger?: string;\n}\n\nconst CHECKLIST_ITEMS: ChecklistItemConfig[] = [\n  {\n    key: 'createProject',\n    label: 'Create your first project',\n    description: 'Start a new story or choose from our templates',\n    icon: BookOpen,\n    tourTrigger: 'spotlight',\n  },\n  {\n    key: 'addChapter',\n    label: 'Add a chapter',\n    description: 'Structure your story with chapters and scenes',\n    icon: FileText,\n    tourTrigger: 'spotlight',\n  },\n  {\n    key: 'addCharacter',\n    label: 'Create a character',\n    description: 'Develop memorable characters with detailed profiles',\n    icon: Users,\n    tourTrigger: 'spotlight',\n  },\n  {\n    key: 'writeContent',\n    label: 'Write your first 100 words',\n    description: 'Get started with the writing process',\n    icon: Target,\n    tourTrigger: 'spotlight',\n  },\n  {\n    key: 'useTimeline',\n    label: 'Explore the Timeline',\n    description: 'Plan and organize your story structure',\n    icon: BarChart3,\n    tourTrigger: 'spotlight',\n  },\n  {\n    key: 'exportProject',\n    label: 'Export your work',\n    description: 'Share your story in PDF, Word, or other formats',\n    icon: FileText,\n  },\n  {\n    key: 'useAI',\n    label: 'Try the AI assistant',\n    description: 'Get writing suggestions and overcome blocks',\n    icon: Sparkles,\n    tourTrigger: 'spotlight',\n  },\n];\n\ninterface CompletionChecklistProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onStartTour?: (tourType: string) => void;\n}\n\nconst CHECKLIST_KEY = 'inkwell-completion-checklist';\n\nexport const CompletionChecklist: React.FC<CompletionChecklistProps> = ({\n  isOpen,\n  onClose,\n  onStartTour,\n}) => {\n  const [hoveredItem, setHoveredItem] = useState<string | null>(null);\n  const [checklist, setChecklist] = useState<Record<string, boolean>>(() => {\n    try {\n      const saved = localStorage.getItem(CHECKLIST_KEY);\n      return saved ? JSON.parse(saved) : {};\n    } catch {\n      return {};\n    }\n  });\n\n  // Persist checklist to localStorage\n  useEffect(() => {\n    try {\n      localStorage.setItem(CHECKLIST_KEY, JSON.stringify(checklist));\n    } catch (error) {\n      console.warn('Failed to save checklist:', error);\n    }\n  }, [checklist]);\n\n  if (!isOpen) return null;\n\n  const completedCount = Object.values(checklist).filter(Boolean).length;\n  const totalCount = CHECKLIST_ITEMS.length;\n  const progressPercentage = (completedCount / totalCount) * 100;\n\n  const canShowTour = (tourId: string) => {\n    // Can show tour if it hasn't been completed yet\n    return !isTourDone(tourId);\n  };\n\n  const handleItemClick = (item: ChecklistItemConfig) => {\n    if (item.tourTrigger && canShowTour(item.tourTrigger)) {\n      try {\n        analyticsService.trackEvent('checklist_tour_requested', {\n          tourType: item.tourTrigger,\n          item: item.key,\n        });\n      } catch {}\n\n      onStartTour?.(item.tourTrigger);\n      onClose();\n    }\n  };\n\n  const getItemStyle = (item: ChecklistItemConfig) => {\n    const isCompleted = checklist[item.key] || false;\n    const canStartTour = item.tourTrigger && canShowTour(item.tourTrigger);\n\n    return {\n      opacity: isCompleted ? 0.7 : 1,\n      cursor: canStartTour ? 'pointer' : 'default',\n      background:\n        hoveredItem === item.key && canStartTour ? 'rgba(59, 130, 246, 0.05)' : 'transparent',\n    };\n  };\n\n  return (\n    <div className=\"fixed inset-0 z-50 bg-black/50 backdrop-blur-sm flex items-center justify-center p-4\">\n      <div className=\"bg-white dark:bg-slate-800 rounded-xl shadow-2xl max-w-md w-full max-h-[90vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"p-6 border-b border-slate-200 dark:border-slate-700\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center\">\n                <Trophy className=\"w-5 h-5 text-white\" />\n              </div>\n              <div>\n                <h2 className=\"text-xl font-semibold text-slate-900 dark:text-white\">\n                  Getting Started\n                </h2>\n                <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n                  Complete these steps to master Inkwell\n                </p>\n              </div>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"text-slate-400 hover:text-slate-600 dark:hover:text-slate-300 transition-colors\"\n              aria-label=\"Close checklist\"\n            >\n              ✕\n            </button>\n          </div>\n\n          {/* Progress bar */}\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between text-sm\">\n              <span className=\"text-slate-600 dark:text-slate-400\">Progress</span>\n              <span className=\"font-medium text-slate-900 dark:text-white\">\n                {completedCount} of {totalCount}\n              </span>\n            </div>\n            <div className=\"w-full bg-slate-200 dark:bg-slate-700 rounded-full h-2 overflow-hidden\">\n              <div\n                className=\"h-full bg-gradient-to-r from-blue-500 to-purple-600 transition-all duration-500 ease-out rounded-full\"\n                style={{ width: `${progressPercentage}%` }}\n              />\n            </div>\n            {completedCount === totalCount && (\n              <div className=\"text-center py-2\">\n                <span className=\"text-sm font-medium text-green-600 dark:text-green-400\">\n                  🎉 Congratulations! You've mastered the basics!\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Checklist items */}\n        <div className=\"p-4 max-h-96 overflow-y-auto\">\n          <div className=\"space-y-2\">\n            {CHECKLIST_ITEMS.map((item) => {\n              const Icon = item.icon;\n              const isCompleted = checklist[item.key] || false;\n              const canStartTour = item.tourTrigger && canShowTour(item.tourTrigger);\n\n              return (\n                <div\n                  key={item.key}\n                  className={`p-3 rounded-lg border transition-all duration-200 ${\n                    isCompleted\n                      ? 'border-green-200 dark:border-green-800 bg-green-50 dark:bg-green-900/20'\n                      : canStartTour\n                        ? 'border-blue-200 dark:border-blue-700 hover:border-blue-300 dark:hover:border-blue-600'\n                        : 'border-slate-200 dark:border-slate-700'\n                  }`}\n                  style={getItemStyle(item)}\n                  onClick={() => handleItemClick(item)}\n                  onMouseEnter={() => setHoveredItem(item.key)}\n                  onMouseLeave={() => setHoveredItem(null)}\n                  role={canStartTour ? 'button' : 'listitem'}\n                  tabIndex={canStartTour ? 0 : undefined}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter' || e.key === ' ') {\n                      e.preventDefault();\n                      handleItemClick(item);\n                    }\n                  }}\n                >\n                  <div className=\"flex items-start gap-3\">\n                    {/* Checkbox */}\n                    <div className=\"flex-shrink-0 pt-0.5\">\n                      {isCompleted ? (\n                        <CheckCircle2 className=\"w-5 h-5 text-green-600 dark:text-green-400\" />\n                      ) : (\n                        <Circle className=\"w-5 h-5 text-slate-400 dark:text-slate-500\" />\n                      )}\n                    </div>\n\n                    {/* Icon */}\n                    <div\n                      className={`w-8 h-8 rounded-lg flex items-center justify-center flex-shrink-0 ${\n                        isCompleted\n                          ? 'bg-green-100 dark:bg-green-900/30'\n                          : 'bg-slate-100 dark:bg-slate-700'\n                      }`}\n                    >\n                      <Icon\n                        className={`w-4 h-4 ${\n                          isCompleted\n                            ? 'text-green-600 dark:text-green-400'\n                            : 'text-slate-600 dark:text-slate-400'\n                        }`}\n                      />\n                    </div>\n\n                    {/* Content */}\n                    <div className=\"flex-1 min-w-0\">\n                      <h3\n                        className={`font-medium text-sm ${\n                          isCompleted\n                            ? 'text-green-900 dark:text-green-100 line-through'\n                            : 'text-slate-900 dark:text-white'\n                        }`}\n                      >\n                        {item.label}\n                      </h3>\n                      <p\n                        className={`text-xs mt-1 ${\n                          isCompleted\n                            ? 'text-green-700 dark:text-green-300'\n                            : 'text-slate-600 dark:text-slate-400'\n                        }`}\n                      >\n                        {item.description}\n                      </p>\n\n                      {/* Tour availability hint */}\n                      {!isCompleted && canStartTour && (\n                        <div className=\"mt-2\">\n                          <span className=\"inline-flex items-center gap-1 text-xs text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/30 px-2 py-1 rounded-full\">\n                            <Target className=\"w-3 h-3\" />\n                            Click for quick tour\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"p-4 border-t border-slate-200 dark:border-slate-700\">\n          <div className=\"text-xs text-slate-500 dark:text-slate-400 text-center\">\n            Click on incomplete items to get guided tours and tips\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { CompletionChecklist as default, CompletionChecklist as CompletionChecklistComponent };\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/FeatureDiscovery.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/FirstDraftPath.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/OnboardingUI.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/RelaunchTourButton.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/TourGating.components.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/TourNudges.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/TourPromptGate.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/TourProvider.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/WelcomeModal.tsx",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onStartTour' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 27,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 27,
        "endColumn": 14
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 1,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "// src/components/Onboarding/WelcomeModal.tsx\nimport { Clock, X, ArrowRight, CheckCircle, Lightbulb } from 'lucide-react';\nimport React, { useState } from 'react';\n\n// IMPORTANT: import from the barrel so tests that mock \"@/components/icons\" work\nimport { InkwellFeather } from '@/components/icons';\nimport { useOnboardingGate } from '@/hooks/useOnboardingGate';\nimport { featureFlagService } from '@/services/featureFlagService';\nimport { startDefaultTour } from '@/tour/tourEntry';\n\nimport { CORE_TOUR_STEPS } from './tourRegistry';\nimport { useTour } from './useTour';\nimport { startTourSafely, getSafeTourSteps } from './utils/tourSafety';\n\ninterface WelcomeModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onStartTour: (tourType: string) => void;\n  onOpenChecklist: () => void;\n}\n\n// Removed duplicate import\n\nexport const WelcomeModal: React.FC<WelcomeModalProps> = ({\n  isOpen,\n  onClose,\n  onStartTour,\n  onOpenChecklist,\n}) => {\n  const { setNeverShowAgain, setRemindMeLater, logAnalytics, preferences, startTour } = useTour();\n  const { setTourActive, snoozeModal, dismissModal } = useOnboardingGate();\n  const [selectedOption, setSelectedOption] = useState<'tour' | 'checklist' | 'later' | 'never'>(\n    'tour',\n  );\n\n  if (!isOpen || !featureFlagService.isEnabled('tour_simpleTour')) return null;\n\n  const handleStartTour = async () => {\n    logAnalytics('welcome_modal_start_tour');\n\n    // 1. Store hide preference\n    try {\n      localStorage.setItem('hideWelcome', 'true');\n    } catch {\n      // ignore storage errors in tests/SSR\n    }\n\n    // 2. Prevent modal re-opening during tour\n    setTourActive(true);\n\n    // 3. Snooze modal for 7 days (will be set to completed when tour finishes)\n    snoozeModal(7 * 24); // 7 days\n\n    // 4. Close modal first to release focus trap\n    onClose();\n\n    // 5. Start tour safely on next frame so modal is fully unmounted\n    requestAnimationFrame(async () => {\n      try {\n        const safeTourSteps = getSafeTourSteps(CORE_TOUR_STEPS?.length ? CORE_TOUR_STEPS : []);\n        if (safeTourSteps.length > 0) {\n          await startTourSafely(safeTourSteps, startTour);\n        } else {\n          // Fallback to default tour if no steps\n          startDefaultTour();\n        }\n\n        // Watchdog: if no overlay after 400ms, hard-start the default tour\n        setTimeout(() => {\n          const overlay = document.querySelector('[data-spotlight-overlay],[data-tour-overlay]');\n          if (!overlay) {\n            console.warn('Tour watchdog: overlay not detected, starting default tour directly');\n            startDefaultTour();\n          }\n        }, 400);\n      } catch (error) {\n        console.error('Failed to start tour:', error);\n        // Fallback to the original method if safe start fails\n        startDefaultTour();\n      }\n    });\n  };\n\n  const handleOpenChecklist = () => {\n    logAnalytics('welcome_modal_open_checklist');\n    onOpenChecklist();\n    onClose();\n  };\n\n  const handleRemindLater = () => {\n    logAnalytics('welcome_modal_remind_later');\n    setRemindMeLater(true); // Remind later\n    snoozeModal(24); // Also update gate\n    onClose();\n  };\n\n  const handleNeverShow = () => {\n    logAnalytics('welcome_modal_never_show');\n    setNeverShowAgain(true);\n    dismissModal(); // Also update gate\n    onClose();\n  };\n\n  const tourDuration = Math.ceil((CORE_TOUR_STEPS.length * 10) / 60); // ~10s per step\n\n  return (\n    <div className=\"fixed inset-0 z-50 bg-black/50 backdrop-blur-sm flex items-center justify-center p-4\">\n      <div className=\"bg-white dark:bg-slate-800 rounded-xl shadow-2xl max-w-lg w-full overflow-hidden animate-in fade-in slide-in-from-bottom-4 duration-300\">\n        {/* Header */}\n        <div className=\"relative p-6 bg-gradient-to-br from-blue-500 to-purple-600 text-white\">\n          <button\n            onClick={onClose}\n            className=\"absolute top-4 right-4 text-white/80 hover:text-white transition-colors\"\n            aria-label=\"Close welcome modal\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n\n          <div className=\"flex items-center gap-4 mb-4\">\n            <div className=\"w-12 h-12 bg-white/20 rounded-xl flex items-center justify-center backdrop-blur-sm\">\n              <InkwellFeather name=\"writing\" size=\"lg\" className=\"text-white\" />\n            </div>\n            <div>\n              <h1 className=\"text-2xl font-bold\">Welcome to Inkwell!</h1>\n              <p className=\"text-white/90 text-sm\">Your professional writing companion</p>\n            </div>\n          </div>\n\n          <p className=\"text-white/90 leading-relaxed\">\n            Ready to start writing your next great story? Let us show you around so you can jump in\n            with confidence and focus on what matters most—your words.\n          </p>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6 space-y-4\">\n          {/* Tour Option */}\n          <div\n            className={`p-4 rounded-lg border-2 cursor-pointer transition-all duration-200 ${\n              selectedOption === 'tour'\n                ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20'\n                : 'border-slate-200 dark:border-slate-700 hover:border-blue-300 dark:hover:border-blue-600'\n            }`}\n            onClick={() => setSelectedOption('tour')}\n          >\n            <div className=\"flex items-start gap-3\">\n              <div className=\"flex-shrink-0 mt-1\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 flex items-center justify-center ${\n                    selectedOption === 'tour'\n                      ? 'border-blue-500 bg-blue-500'\n                      : 'border-slate-300 dark:border-slate-600'\n                  }`}\n                >\n                  {selectedOption === 'tour' && <div className=\"w-2 h-2 bg-white rounded-full\" />}\n                </div>\n              </div>\n              <div className=\"flex-1\">\n                <div className=\"flex items-center gap-2 mb-1\">\n                  <h3 className=\"font-semibold text-slate-900 dark:text-white\">\n                    Start the Quick Tour\n                  </h3>\n                  <span className=\"inline-flex items-center gap-1 text-xs text-slate-600 dark:text-slate-400 bg-slate-100 dark:bg-slate-700 px-2 py-1 rounded-full\">\n                    <Clock className=\"w-3 h-3\" />~{tourDuration} min\n                  </span>\n                </div>\n                <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n                  Interactive walkthrough of the essential features. Perfect for getting started\n                  right away.\n                </p>\n                <div className=\"mt-2 flex items-center gap-4 text-xs text-slate-500 dark:text-slate-400\">\n                  <span>✓ Create your first project</span>\n                  <span>✓ Learn the interface</span>\n                  <span>✓ Start writing</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Checklist Option */}\n          <div\n            className={`p-4 rounded-lg border-2 cursor-pointer transition-all duration-200 ${\n              selectedOption === 'checklist'\n                ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20'\n                : 'border-slate-200 dark:border-slate-700 hover:border-blue-300 dark:hover:border-blue-600'\n            }`}\n            onClick={() => setSelectedOption('checklist')}\n          >\n            <div className=\"flex items-start gap-3\">\n              <div className=\"flex-shrink-0 mt-1\">\n                <div\n                  className={`w-5 h-5 rounded-full border-2 flex items-center justify-center ${\n                    selectedOption === 'checklist'\n                      ? 'border-blue-500 bg-blue-500'\n                      : 'border-slate-300 dark:border-slate-600'\n                  }`}\n                >\n                  {selectedOption === 'checklist' && (\n                    <div className=\"w-2 h-2 bg-white rounded-full\" />\n                  )}\n                </div>\n              </div>\n              <div className=\"flex-1\">\n                <h3 className=\"font-semibold text-slate-900 dark:text-white mb-1\">\n                  Explore at Your Own Pace\n                </h3>\n                <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n                  Get a checklist of key features to discover when you're ready. Learn as you go.\n                </p>\n                <div className=\"mt-2 flex items-center gap-4 text-xs text-slate-500 dark:text-slate-400\">\n                  <span>✓ Self-guided learning</span>\n                  <span>✓ Mini-tours available</span>\n                  <span>✓ Track progress</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Later Option */}\n          <div\n            className={`p-3 rounded-lg border cursor-pointer transition-all duration-200 ${\n              selectedOption === 'later'\n                ? 'border-slate-400 bg-slate-50 dark:bg-slate-700/50'\n                : 'border-slate-200 dark:border-slate-700 hover:border-slate-300 dark:hover:border-slate-600'\n            }`}\n            onClick={() => setSelectedOption('later')}\n          >\n            <div className=\"flex items-center gap-3\">\n              <div className=\"flex-shrink-0\">\n                <div\n                  className={`w-4 h-4 rounded-full border-2 flex items-center justify-center ${\n                    selectedOption === 'later'\n                      ? 'border-slate-400 bg-slate-400'\n                      : 'border-slate-300 dark:border-slate-600'\n                  }`}\n                >\n                  {selectedOption === 'later' && (\n                    <div className=\"w-1.5 h-1.5 bg-white rounded-full\" />\n                  )}\n                </div>\n              </div>\n              <div className=\"flex-1\">\n                <h3 className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n                  Remind me tomorrow\n                </h3>\n              </div>\n            </div>\n          </div>\n\n          {/* Never Option */}\n          <div\n            className={`p-3 rounded-lg border cursor-pointer transition-all duration-200 ${\n              selectedOption === 'never'\n                ? 'border-slate-400 bg-slate-50 dark:bg-slate-700/50'\n                : 'border-slate-200 dark:border-slate-700 hover:border-slate-300 dark:hover:border-slate-600'\n            }`}\n            onClick={() => setSelectedOption('never')}\n          >\n            <div className=\"flex items-center gap-3\">\n              <div className=\"flex-shrink-0\">\n                <div\n                  className={`w-4 h-4 rounded-full border-2 flex items-center justify-center ${\n                    selectedOption === 'never'\n                      ? 'border-slate-400 bg-slate-400'\n                      : 'border-slate-300 dark:border-slate-600'\n                  }`}\n                >\n                  {selectedOption === 'never' && (\n                    <div className=\"w-1.5 h-1.5 bg-white rounded-full\" />\n                  )}\n                </div>\n              </div>\n              <div className=\"flex-1\">\n                <h3 className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">\n                  Don't show this again\n                </h3>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"px-6 pb-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"text-xs text-slate-500 dark:text-slate-400\">\n              You can always access tours from the Help menu\n            </div>\n            <div className=\"flex items-center gap-3\">\n              {selectedOption === 'tour' && (\n                <button\n                  onClick={handleStartTour}\n                  className=\"inline-flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors font-medium\"\n                >\n                  Start Tour\n                  <ArrowRight className=\"w-4 h-4\" />\n                </button>\n              )}\n\n              {selectedOption === 'checklist' && (\n                <button\n                  onClick={handleOpenChecklist}\n                  className=\"inline-flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors font-medium\"\n                >\n                  View Checklist\n                  <CheckCircle className=\"w-4 h-4\" />\n                </button>\n              )}\n\n              {selectedOption === 'later' && (\n                <button\n                  onClick={handleRemindLater}\n                  className=\"inline-flex items-center gap-2 bg-slate-600 hover:bg-slate-700 text-white px-4 py-2 rounded-lg transition-colors font-medium\"\n                >\n                  Remind Tomorrow\n                  <Clock className=\"w-4 h-4\" />\n                </button>\n              )}\n\n              {selectedOption === 'never' && (\n                <button\n                  onClick={handleNeverShow}\n                  className=\"inline-flex items-center gap-2 bg-slate-600 hover:bg-slate-700 text-white px-4 py-2 rounded-lg transition-colors font-medium\"\n                >\n                  Got It\n                  <X className=\"w-4 h-4\" />\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Prior dismissals note */}\n        {preferences && preferences.tourDismissals > 0 && (\n          <div className=\"px-6 pb-2\">\n            <div className=\"flex items-center gap-2 text-xs text-amber-600 dark:text-amber-400 bg-amber-50 dark:bg-amber-900/20 px-3 py-2 rounded-lg\">\n              <Lightbulb className=\"w-3 h-3\" />\n              We notice you've skipped the tour before. Taking it now can save you time later!\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WelcomeModal;\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/WelcomeModalNew.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/__mocks__/TourOverlay.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/__tests__/InkwellTourOverlay.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/__tests__/tourSafety.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/__tests__/tourSafety.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/_archive/InkwellTourOverlay.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/_archive/OnboardingOrchestrator.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/_archive/TourOverlay.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/_archive/TourProvider.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/_archive/TutorialRouter.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/featureFlagTour.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/hooks/TourController.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/hooks/__tests__/TourController.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/hooks/__tests__/useSpotlightAutostartHardened.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/hooks/__tests__/useTutorialStorage.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/hooks/tourHookUtils.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/hooks/useAutostart.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/hooks/useSimpleTourAutostart.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/hooks/useSpotlightAutostart.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/hooks/useSpotlightAutostartHardened.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/hooks/useTutorialStorage.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/presetLoaderHelper.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/selectorMap.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/steps/Step.types.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/steps/StepComplete.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/steps/StepFeedback.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/steps/StepTour.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/steps/StepWelcome.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/testUtils.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/tour-core/TourController.d.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/tour-core/TourController.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/tour-core/spotlightSteps.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/tourAnalytics.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/tourGating.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/tourPersistence.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/tourRegistry.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/useInkwellSpotlightTour.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/useTour.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/useTutorialStorage.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/utils/debug.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/utils/routeGuards.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/utils/tourOnce.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/utils/tourSafety.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Onboarding/utils/waitForElement.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/PWA/PWAInstallButton.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/PWA/PWAOfflineIndicator.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/PWA/PWAUpdateNotification.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/PWA/__tests__/PWAInstallButton.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/PWA/__tests__/PWAOfflineIndicator.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/PWA/__tests__/PWAUpdateNotification.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/PWA/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Panels/AnalyticsPanel.tsx",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'WritingSession' is defined but never used. Allowed unused vars must match /^_/u.",
        "line": 11,
        "column": 11,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 11,
        "endColumn": 25
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 1,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "// src/components/Panels/AnalysisPanel.tsx - Upgraded Version\nimport { BarChart3, TrendingUp, Clock, Target, BookOpen, FileText } from 'lucide-react';\nimport React, { useEffect, useState } from 'react';\n\nimport WritingAnalyticsView from '@/components/Analytics/WritingAnalyticsView';\nimport { useAppContext } from '@/context/AppContext';\nimport TourCompletionCard from '@/features/analytics/components/TourCompletionCard';\nimport { useProjectAnalytics } from '@/hooks/useProjectAnalytics';\nimport { triggerAnalyticsVisited } from '@/utils/tourTriggers';\n\ninterface WritingSession {\n  date: string;\n  wordCount: number;\n  duration?: number;\n}\n\nconst AnalyticsPanel: React.FC = () => {\n  const { state, currentProject } = useAppContext();\n  const [viewMode, setViewMode] = useState<'simple' | 'advanced'>('advanced');\n\n  // Get comprehensive analytics with chapter integration\n  const analytics = useProjectAnalytics(currentProject?.id ?? state.currentProjectId ?? '');\n\n  // Fire tour trigger on component mount\n  useEffect(() => {\n    triggerAnalyticsVisited();\n  }, []);\n\n  // If we have a current project with enhanced analytics, use the advanced view\n  const hasEnhancedAnalytics = currentProject && 'sessions' in currentProject;\n\n  // Simple Analytics View (enhanced with chapter integration)\n  const SimpleAnalyticsView = () => {\n    const { totals, chapters, notice } = analytics;\n\n    const sortedSessions = [...analytics.sessions].sort(\n      (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime(),\n    );\n\n    return (\n      <div data-tour=\"analytics-panel-root\" className=\"p-6 space-y-6\">\n        {/* Header with View Toggle */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Writing Analytics</h1>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n              Project: {currentProject?.name ?? state.currentProjectId ?? 'None selected'}\n            </p>\n          </div>\n\n          {hasEnhancedAnalytics && (\n            <div className=\"flex items-center gap-2\">\n              <button\n                onClick={() => setViewMode('simple')}\n                className={`px-3 py-1 text-sm rounded-md transition-colors ${\n                  viewMode === 'simple'\n                    ? 'bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-300'\n                    : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100'\n                }`}\n              >\n                Simple\n              </button>\n              <button\n                onClick={() => setViewMode('advanced')}\n                className={`px-3 py-1 text-sm rounded-md transition-colors ${\n                  viewMode === 'advanced'\n                    ? 'bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-300'\n                    : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100'\n                }`}\n              >\n                Advanced\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* Notice about data source */}\n        {notice && (\n          <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4\">\n            <div className=\"flex items-center gap-3\">\n              <BarChart3 className=\"w-5 h-5 text-blue-600 dark:text-blue-400 flex-shrink-0\" />\n              <div>\n                <div className=\"text-sm font-medium text-blue-900 dark:text-blue-100\">{notice}</div>\n                <div className=\"text-xs text-blue-700 dark:text-blue-300 mt-1\">\n                  Start typing to record writing sessions automatically.\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Quick Stats */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center gap-3 mb-2\">\n              <div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\">\n                <BarChart3 className=\"w-5 h-5 text-blue-600 dark:text-blue-400\" />\n              </div>\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">Total Words</div>\n            </div>\n            <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              {totals.totalWords.toLocaleString()}\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center gap-3 mb-2\">\n              <div className=\"p-2 bg-green-100 dark:bg-green-900 rounded-lg\">\n                <Clock className=\"w-5 h-5 text-green-600 dark:text-green-400\" />\n              </div>\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">Writing Days</div>\n            </div>\n            <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              {totals.daysWithWriting}\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center gap-3 mb-2\">\n              <div className=\"p-2 bg-purple-100 dark:bg-purple-900 rounded-lg\">\n                <Target className=\"w-5 h-5 text-purple-600 dark:text-purple-400\" />\n              </div>\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">Daily Average</div>\n            </div>\n            <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              {totals.dailyAvg.toLocaleString()}\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center gap-3 mb-2\">\n              <div className=\"p-2 bg-orange-100 dark:bg-orange-900 rounded-lg\">\n                <TrendingUp className=\"w-5 h-5 text-orange-600 dark:text-orange-400\" />\n              </div>\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">Streak</div>\n            </div>\n            <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              {totals.streak} day{totals.streak !== 1 ? 's' : ''}\n            </div>\n          </div>\n\n          {/* Tour Completion Card */}\n          <TourCompletionCard />\n        </div>\n\n        {/* Chapter Stats Section */}\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Chapter Statistics\n          </h2>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"p-2 bg-indigo-100 dark:bg-indigo-900 rounded-lg\">\n                <BookOpen className=\"w-5 h-5 text-indigo-600 dark:text-indigo-400\" />\n              </div>\n              <div>\n                <div className=\"text-sm text-gray-500 dark:text-gray-400\">Chapters</div>\n                <div className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                  {chapters.chapterCount}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-3\">\n              <div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\">\n                <FileText className=\"w-5 h-5 text-blue-600 dark:text-blue-400\" />\n              </div>\n              <div>\n                <div className=\"text-sm text-gray-500 dark:text-gray-400\">Manuscript Words</div>\n                <div className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                  {chapters.chapterWords.toLocaleString()}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-3\">\n              <div className=\"p-2 bg-teal-100 dark:bg-teal-900 rounded-lg\">\n                <Target className=\"w-5 h-5 text-teal-600 dark:text-teal-400\" />\n              </div>\n              <div>\n                <div className=\"text-sm text-gray-500 dark:text-gray-400\">Avg Words/Chapter</div>\n                <div className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                  {chapters.avgWordsPerChapter.toLocaleString()}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-3\">\n              <div className=\"p-2 bg-purple-100 dark:bg-purple-900 rounded-lg\">\n                <TrendingUp className=\"w-5 h-5 text-purple-600 dark:text-purple-400\" />\n              </div>\n              <div>\n                <div className=\"text-sm text-gray-500 dark:text-gray-400\">Longest Chapter</div>\n                <div className=\"text-sm font-semibold text-gray-900 dark:text-white truncate max-w-[120px]\">\n                  {chapters.longestChapter?.title ?? '—'}\n                </div>\n                {chapters.longestChapter && (\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    {chapters.longestChapter.wordCount.toLocaleString()} words\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Recent Sessions */}\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Recent Sessions</h2>\n            {hasEnhancedAnalytics && (\n              <button\n                onClick={() => setViewMode('advanced')}\n                className=\"text-sm text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 font-medium\"\n              >\n                View Advanced Analytics →\n              </button>\n            )}\n          </div>\n\n          {sortedSessions.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <BarChart3 className=\"w-12 h-12 text-gray-400 dark:text-gray-600 mx-auto mb-3\" />\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                No writing sessions recorded yet.\n              </div>\n              <div className=\"text-xs text-gray-400 dark:text-gray-500 mt-1\">\n                Start writing to see your analytics!\n              </div>\n            </div>\n          ) : (\n            <div className=\"space-y-2\">\n              {sortedSessions\n                .slice(-10)\n                .reverse()\n                .map((session, index) => (\n                  <div\n                    key={`${session.date}-${index}`}\n                    className=\"flex justify-between items-center px-4 py-3 bg-gray-50 dark:bg-gray-700 rounded-md hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors\"\n                  >\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        {new Date(session.date).toLocaleDateString('en-US', {\n                          weekday: 'short',\n                          month: 'short',\n                          day: 'numeric',\n                        })}\n                      </span>\n                      {session.duration && (\n                        <span className=\"text-xs text-gray-500 dark:text-gray-400 ml-2\">\n                          {session.duration}m\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"text-sm font-semibold text-gray-900 dark:text-white\">\n                        {session.wordCount} words\n                      </span>\n                      {session.wordCount > totals.dailyAvg && totals.dailyAvg > 0 && (\n                        <TrendingUp className=\"w-4 h-4 text-green-500\" />\n                      )}\n                    </div>\n                  </div>\n                ))}\n            </div>\n          )}\n        </div>\n\n        {/* Upgrade Notice */}\n        {!hasEnhancedAnalytics && (\n          <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4\">\n            <div className=\"flex items-center gap-3\">\n              <TrendingUp className=\"w-5 h-5 text-blue-600 dark:text-blue-400\" />\n              <div>\n                <div className=\"text-sm font-medium text-blue-900 dark:text-blue-100\">\n                  Enhanced Analytics Available\n                </div>\n                <div className=\"text-xs text-blue-700 dark:text-blue-300 mt-1\">\n                  Create a new project to access advanced analytics with charts, progress tracking,\n                  and detailed insights.\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Render based on mode and available data\n  if (viewMode === 'advanced' && hasEnhancedAnalytics) {\n    return <WritingAnalyticsView />;\n  }\n\n  return <SimpleAnalyticsView />;\n};\n\nexport default AnalyticsPanel;\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Panels/DashboardPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Panels/SettingsPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Panels/TimelinePanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Panels/WritingPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Panels/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/PerformanceChart.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/ArcConflictAnalyzer.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/ArcExportImport.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/BeatSheetPlanner.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/CharacterArcDemo.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/CharacterArcManager.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/CharacterArcTemplates.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/CharacterGoalTracker.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/CharacterManager.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/GeneratedOutlinePreview.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/InteractiveArcEditor.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/RelationshipMapper.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/SceneImpactAnalyzer.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/StoryArchitectDemo.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/StoryArchitectFlow.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/StoryArchitectMode.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/StoryArchitectSteps.tsx",
    "messages": [],
    "suppressedMessages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'premise' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 17,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 17,
        "endColumn": 10,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onChange' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 19,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 19,
        "endColumn": 11,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onNext' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 21,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 21,
        "endColumn": 9,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onPrevious' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 23,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 23,
        "endColumn": 13,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onGenerate' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 25,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 25,
        "endColumn": 13,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'isGenerating' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 27,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 27,
        "endColumn": 15,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'outline' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 42,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 42,
        "endColumn": 10,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onNext' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 44,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 44,
        "endColumn": 9,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onPrevious' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 46,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 46,
        "endColumn": 13,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onRegenerate' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 48,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 48,
        "endColumn": 15,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'outline' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 71,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 71,
        "endColumn": 10,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'options' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 73,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 73,
        "endColumn": 10,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onOptionsChange' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 75,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 75,
        "endColumn": 18,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onIntegrate' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 77,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 77,
        "endColumn": 14,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onPrevious' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 79,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 79,
        "endColumn": 13,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'currentProject' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 81,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 81,
        "endColumn": 17,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      }
    ],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/StoryStructureVisualizer.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/VoiceEvolutionTracker.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/WorldBuilding/CultureCard.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/WorldBuilding/LocationCard.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/WorldBuilding/RuleCard.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/WorldBuilding/WorldBuildingPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/WorldBuilding/WorldFormModal.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/WorldBuilding/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/WorldBuilding/types.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Planning/WorldBuilding/worldBuildingReducer.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Privacy/PrivacyControls.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Privacy/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ProjectBrowser/EnhancedProjectBrowser.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ProjectInsights/ProjectInsights.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ProjectModal.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ProjectTemplates/TemplateSelector.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Projects/HeaderProjectTitle.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Projects/NewProjectDialog.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ProtectedRoute.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Recovery/StorageRecoveryBanner.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/RequireAuth.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/RouteGuards/PreviewGuard.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Search/SearchBar.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Search/SearchResults.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Search/SmartSearchModal.tsx",
    "messages": [],
    "suppressedMessages": [
      {
        "ruleId": "react-hooks/exhaustive-deps",
        "severity": 1,
        "message": "React Hook useCallback has a missing dependency: 'performSearch'. Either include it or remove the dependency array.",
        "line": 121,
        "column": 5,
        "nodeType": "ArrayExpression",
        "endLine": 121,
        "endColumn": 14,
        "suggestions": [
          {
            "desc": "Update the dependencies array to be: [filters, performSearch]",
            "fix": { "range": [3367, 3376], "text": "[filters, performSearch]" }
          }
        ],
        "suppressions": [
          {
            "kind": "directive",
            "justification": "performSearch is stable, using filters as proxy"
          }
        ]
      }
    ],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Search/SmartSearchTrigger.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Search/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Settings/BackupControls.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Settings/ModeToggle.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Settings/SettingsControls.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Settings/SnapshotHistoryDialog.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Settings/TourReplayButton.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Settings/UIModeToggle.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Sidebar.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Sidebar.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Storage/StatusChip.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Storage/StatusChip.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Storage/StorageBadge.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Storage/StorageBanner.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Storage/StorageHealthWidget.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Storage/__tests__/StorageHealthWidget.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Storage/thresholds.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ToastContainer.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Topbar.tsx",
    "messages": [],
    "suppressedMessages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onOpenNotifications' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 47,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 47,
        "endColumn": 22,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onToggleTheme' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 49,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 49,
        "endColumn": 16,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onToggleClaude' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 51,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 51,
        "endColumn": 17,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'theme' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 53,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 53,
        "endColumn": 8,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      }
    ],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/TopbarBell.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ViewSwitcher.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Views/StoryPlanningView.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Views/TimelineView.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Views/WritingView.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/AdvancedFocusMode.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/ChapterWritingPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/Chapters/ChapterSidebar.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/Chapters/SortableChapterItem.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/Chapters/SplitIntoChaptersButton.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/ClaudeToolbar.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/ClaudeToolbarTypes.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/EnhancedAIWritingToolbar.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/EnhancedWritingEditor.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/EnhancedWritingPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/ExportDialog.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/FallbackEditor.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/FocusModeControls.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/FocusModeEditor.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/FocusModeTypewriter.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/LazyTipTapEditor.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/SceneEditor.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/SceneHeader.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/SceneHeaderTypes.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/SceneList.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/SceneNavigationPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/TipTapEditor.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/WhiteEditor.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/WritingEditor.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/WritingStats.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/WritingToolbar.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/Writing/types.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/__tests__/ProtectedRoute.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/__tests__/RequireAuth.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/_archive/Providers.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/common/ErrorBoundary.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/common/LazyLoadingFallback.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/editor/ConsistencyIssuesPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/editor/InlineConsistencySuggestions.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/editor/extensions/ConsistencyExtension.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/icons/IconShowcase.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/icons/InkwellFeather.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/icons/InkwellFeather.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/icons/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/lazy/index.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/shared/ErrorBoundary.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/shared/LoadingScreen.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/timeline/SceneLinkageSuggestions.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/timeline/TimelineNavigation.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/timeline/TimelineValidationPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/Avatar.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/BrandedEmptyState.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/Button.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/Card.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/ConfirmationDialog.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/EmptyStates.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/Icon.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/Input.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/KeyboardHints.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/LoadingComponents.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/Panel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/ToastManager.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/ToastMessage.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/alert.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/badge.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/checkbox.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/collapsible.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/dialog.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/label.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/popover.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/progress.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/scroll-area.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/select.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/components/ui/switch.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/config/features.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/constants/brand.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/constants/branding.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/constants/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/consts/writing.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/AiSettingsContext.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/AppContext.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/AppContext.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/AuthContext.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/AuthContext.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/ChaptersContext.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/ClaudeProvider.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/CommandPaletteContext.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/EditorContext.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/EditorContext.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/NavContext.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/ToastContext.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/__tests__/AppContext.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/__tests__/AuthContext.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/constants.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/constants.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/context/toast.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/data/__tests__/supaSelect.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/data/dbFactory.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/data/dbViews.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/data/repositories/chapterRepo.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/data/repositories/characterRepo.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/data/repositories/noteRepo.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/data/repositories/projectRepo.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/data/sampleProject.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/data/starterTemplates.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/data/supaSelect.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/db/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/dev/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/dev/makeCoprus.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/dev/preflight.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/dev/printTourFlags.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/dev/tourAnalyticsExport.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/domain/schemaVersion.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/domain/types.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/env.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/export/styles/printCss.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/export/templates/__tests__/analysisSummary.spec.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/export/templates/__tests__/manuscript.spec.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/export/templates/analysisSummary.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'idx' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 44,
        "column": 13,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 44,
        "endColumn": 16
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 1,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import { PRINT_CSS } from '../styles/printCss';\n\ninterface Scorecard {\n  structure: number;\n  pacing: number;\n  scenePurpose: number;\n  coverage: number;\n  grade: string;\n}\ninterface Insight {\n  finding: string;\n  suggestion: string;\n  affectedChapters: number[];\n}\n\nexport function renderAnalysisSummaryHTML(input: {\n  title: string;\n  author?: string;\n  scorecard?: Scorecard;\n  insights: Insight[];\n  pacingSVG?: string; // data URL (optional)\n  arcsSVG?: string; // data URL (optional)\n}) {\n  const title = escapeHtml(input.title || 'Analysis Summary');\n  const author = input.author ? ` — ${escapeHtml(input.author)}` : '';\n\n  const sc = input.scorecard;\n  const scoreRow = sc\n    ? `\n      <tr><th>Structure</th><td>${sc.structure}</td></tr>\n      <tr><th>Pacing</th><td>${sc.pacing}</td></tr>\n      <tr><th>Scene Purpose</th><td>${sc.scenePurpose}</td></tr>\n      <tr><th>Coverage</th><td>${sc.coverage}</td></tr>\n    `\n    : `<tr><td colspan=\"2\">Scorecard unavailable</td></tr>`;\n\n  const gradeBadge = sc\n    ? `<span class=\"badge grade-${gradeClass(sc.grade)}\">Grade ${escapeHtml(sc.grade)}</span>`\n    : '';\n\n  const insights = (input.insights || [])\n    .slice(0, 5)\n    .map(\n      (ins, idx) => `\n    <li class=\"avoid-break\">\n      <strong>${escapeHtml(ins.finding)}</strong>\n      <div>${escapeHtml(ins.suggestion)}</div>\n      ${ins.affectedChapters?.length ? `<div>Chapters: ${ins.affectedChapters.join(', ')}</div>` : ''}\n    </li>\n  `,\n    )\n    .join('');\n\n  const pacingImg = input.pacingSVG\n    ? `<img alt=\"Pacing chart\" src=\"${input.pacingSVG}\" style=\"max-width:100%; height:auto;\" />`\n    : '';\n  const arcsImg = input.arcsSVG\n    ? `<img alt=\"Arc heatmap\" src=\"${input.arcsSVG}\" style=\"max-width:100%; height:auto;\" />`\n    : '';\n\n  return `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>${title} — Analysis</title>\n  <style>${PRINT_CSS}</style>\n  <style>\n    .cols { display: grid; grid-template-columns: 1fr 1fr; gap: 16pt; }\n    .card { padding: 10pt 0; }\n    .charts { display: grid; grid-template-columns: 1fr 1fr; gap: 12pt; }\n    @media print { .cols { grid-template-columns: 1fr 1fr; } }\n  </style>\n</head>\n<body>\n  <div class=\"header\">${title}${author}</div>\n  <div class=\"footer\">Page <span class=\"pnum\"></span></div>\n\n  <section class=\"avoid-break\">\n    <h1>Analysis Summary</h1>\n    ${gradeBadge}\n  </section>\n\n  <section class=\"cols\">\n    <div class=\"card\">\n      <h2>Scorecard</h2>\n      <table class=\"table\">\n        <tbody>\n          ${scoreRow}\n        </tbody>\n      </table>\n    </div>\n    <div class=\"card\">\n      <h2>Top Insights</h2>\n      <ol style=\"margin:0; padding-left:16pt;\">\n        ${insights || '<li>No insights available</li>'}\n      </ol>\n    </div>\n  </section>\n\n  <section class=\"charts page-break avoid-break\">\n    <div>\n      <h2>Pacing</h2>\n      ${pacingImg || '<div>Chart unavailable</div>'}\n    </div>\n    <div>\n      <h2>Arcs</h2>\n      ${arcsImg || '<div>Chart unavailable</div>'}\n    </div>\n  </section>\n</body>\n</html>\n`;\n}\n\nfunction gradeClass(g: string) {\n  const s = (g || '').toUpperCase();\n  return s === 'A' ? 'A' : s === 'B' ? 'B' : s === 'C' ? 'C' : s === 'D' ? 'D' : 'F';\n}\nfunction escapeHtml(s: string) {\n  return s.replace(\n    /[&<>\"']/g,\n    (m) =>\n      ({\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#039;',\n      })[m]!,\n  );\n}\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/export/templates/manuscript.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/export/utils/__tests__/svgCapture.spec.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/export/utils/chartExport.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/export/utils/svgCapture.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/exports/errors.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/exports/exportController.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/exports/exportEngines/docxEngine.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/exports/exportEngines/epubEngine.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/exports/exportEngines/pdfEngine.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/exports/exportEngines/types-internal.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/exports/exportTemplates/presets/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/exports/exportTypes.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/exports/exportUtils.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/exports/manuscriptAssembler.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/exports/proofread/proofreadService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/exports/proofread/proofreadTypes.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/analytics/components/TourCompletionCard.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/export/ExportModal.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/export/__tests__/ExportModal.spec.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/AccessibilityAnnouncer.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/AnalyzeSceneButton.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/Insights/ConflictHeatmap.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/Insights/IssuesList.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/Insights/PacingGraph.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/Insights/PlotAnalysisPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/PlotBoard.tsx",
    "messages": [],
    "suppressedMessages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onBeforeCardCreate' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 52,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 52,
        "endColumn": 21,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'onBeforeCardDelete' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 54,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 54,
        "endColumn": 21,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      }
    ],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/PlotBoards.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/PlotCard.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/PlotColumn.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/UndoRedoControls.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/VirtualizedColumn.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/filters/FilterPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/types.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/components/views/SavedViewsSelector.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/export/exportSystem.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/filters/filtering.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/hooks/useKeyboardNavigation.ts",
    "messages": [],
    "suppressedMessages": [
      {
        "ruleId": "react-hooks/exhaustive-deps",
        "severity": 1,
        "message": "React Hook useCallback has missing dependencies: 'announce', 'cancelDrag', 'completeDrop', and 'startDrag'. Either include them or remove the dependency array.",
        "line": 198,
        "column": 5,
        "nodeType": "ArrayExpression",
        "endLine": 206,
        "endColumn": 6,
        "suggestions": [
          {
            "desc": "Update the dependencies array to be: [navigateToCard, state.focusedCardId, state.isDragging, state.draggedCardId, state.focusedColumnId, announce, findCardPosition, startDrag, board.columns, completeDrop, cancelDrag]",
            "fix": {
              "range": [6401, 6574],
              "text": "[navigateToCard, state.focusedCardId, state.isDragging, state.draggedCardId, state.focusedColumnId, announce, findCardPosition, startDrag, board.columns, completeDrop, cancelDrag]"
            }
          }
        ],
        "suppressions": [
          {
            "kind": "directive",
            "justification": "Functions use let-then-assign pattern for mutual references"
          }
        ]
      },
      {
        "ruleId": "react-hooks/exhaustive-deps",
        "severity": 1,
        "message": "React Hook useCallback has a missing dependency: 'announce'. Either include it or remove the dependency array.",
        "line": 243,
        "column": 5,
        "nodeType": "ArrayExpression",
        "endLine": 243,
        "endColumn": 23,
        "suggestions": [
          {
            "desc": "Update the dependencies array to be: [announce, findCardPosition]",
            "fix": { "range": [7782, 7800], "text": "[announce, findCardPosition]" }
          }
        ],
        "suppressions": [
          { "kind": "directive", "justification": "announce assigned below via let pattern" }
        ]
      },
      {
        "ruleId": "react-hooks/exhaustive-deps",
        "severity": 1,
        "message": "React Hook useCallback has a missing dependency: 'announce'. Either include it or remove the dependency array.",
        "line": 269,
        "column": 5,
        "nodeType": "ArrayExpression",
        "endLine": 269,
        "endColumn": 71,
        "suggestions": [
          {
            "desc": "Update the dependencies array to be: [state.draggedCardId, findCardPosition, board.columns, onMoveCard, announce]",
            "fix": {
              "range": [8637, 8703],
              "text": "[state.draggedCardId, findCardPosition, board.columns, onMoveCard, announce]"
            }
          }
        ],
        "suppressions": [
          { "kind": "directive", "justification": "announce assigned below via let pattern" }
        ]
      },
      {
        "ruleId": "react-hooks/exhaustive-deps",
        "severity": 1,
        "message": "React Hook useCallback has a missing dependency: 'announce'. Either include it or remove the dependency array.",
        "line": 287,
        "column": 5,
        "nodeType": "ArrayExpression",
        "endLine": 287,
        "endColumn": 44,
        "suggestions": [
          {
            "desc": "Update the dependencies array to be: [state.draggedCardId, findCardPosition, announce]",
            "fix": {
              "range": [9240, 9279],
              "text": "[state.draggedCardId, findCardPosition, announce]"
            }
          }
        ],
        "suppressions": [
          { "kind": "directive", "justification": "announce assigned below via let pattern" }
        ]
      }
    ],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/hooks/usePlotAnalysis.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/hooks/usePlotBoardIntegration.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/hooks/useUndoRedo.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/import/importSystem.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/portability/portabilitySystem.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/schema/versioning.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/store.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/types.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/types/handlers.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/types/keyboard.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/utils/integration.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/plotboards/views/savedViews.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/preview/PreviewBanner.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/preview/PreviewDashboard.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/preview/PreviewLandingPage.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/preview/PreviewWriter.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/preview/analytics.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/preview/demoData.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/preview/isPreviewRoute.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/preview/useDemoStore.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/preview/usePreviewMode.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/profiles/FirstLoginBackfill.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/projects/useProjectArchiveActions.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/settings/CloudSyncToggle.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/tour/TourContext.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/tour/useTourLaunch.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/whatsnew/WhatsNewEntry.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/features/writing/ExportMenu.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/__mocks__/useTourStartupFromUrl.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/__tests__/onboardingGate.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/__tests__/useTourStartupFromUrl.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useActiveProfile.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useAdvancedFocusMode.ts",
    "messages": [],
    "suppressedMessages": [
      {
        "ruleId": "react-hooks/exhaustive-deps",
        "severity": 1,
        "message": "React Hook useCallback has a missing dependency: 'stopSprint'. Either include it or remove the dependency array.",
        "line": 228,
        "column": 6,
        "nodeType": "ArrayExpression",
        "endLine": 228,
        "endColumn": 23,
        "suggestions": [
          {
            "desc": "Update the dependencies array to be: [sprint.isActive, stopSprint]",
            "fix": { "range": [6616, 6633], "text": "[sprint.isActive, stopSprint]" }
          }
        ],
        "suppressions": [
          {
            "kind": "directive",
            "justification": "stopSprint defined later, sprint.isActive sufficient"
          }
        ]
      }
    ],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useAnalyticsTracking.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useAutoSave.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useAutostartSpotlight.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useChapterDocument.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useClaudeKey.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useCommandPalette.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useCommands.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useCurrentUserId.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useDebounce.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useDebounced.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useDeferred.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useEnhancedTimeline.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useExportWizard.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useFeatureFlag.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'key' is defined but never used. Allowed unused args must match /^_/u.",
        "line": 1,
        "column": 32,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 1,
        "endColumn": 35
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 1,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "export function useFeatureFlag(key: string): boolean {\n  // Simple implementation until we have a proper feature flag system\n  return false;\n}\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useFocusMode.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useKeyboardShortcuts.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useLoading.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useNotifications.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useOnboardingGate.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useOnboardingGate.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/usePerformanceMonitor.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/usePrivateModeWarning.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useProfileActions.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useProfileActions.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useProjectAnalytics.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useProjectMetadata.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useProjectSearch.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useProjectStats.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useSaveOperation.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useSmartSearch.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useStorageHealth.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useStorageQuota.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useSuggestTitle.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useTheme.ts",
    "messages": [],
    "suppressedMessages": [
      {
        "ruleId": "react-hooks/exhaustive-deps",
        "severity": 1,
        "message": "React Hook useEffect has a missing dependency: 'theme'. Either include it or remove the dependency array.",
        "line": 37,
        "column": 6,
        "nodeType": "ArrayExpression",
        "endLine": 37,
        "endColumn": 8,
        "suggestions": [
          {
            "desc": "Update the dependencies array to be: [theme]",
            "fix": { "range": [1099, 1101], "text": "[theme]" }
          }
        ],
        "suppressions": [
          { "kind": "directive", "justification": "Intentionally run once on mount" }
        ]
      }
    ],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useTimeline.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useTourManager.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useTourStartupFromUrl.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useTourStateHydration.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useUI.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useViewCommands.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useWriting.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useWritingAssistant.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useWritingGoals.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/hooks/useWritingPlatform.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/lib/__tests__/profileMemory.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/lib/authedFetch.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/lib/guardSupabaseEnv.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/lib/profileMemory.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/lib/resolvePostAuth.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/lib/supabaseClient.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/lib/tourEligibility.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/lib/utils.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/main.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/onboarding/OnboardingOrchestrator.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/onboarding/steps/StepFinish.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/onboarding/steps/StepProjectCard.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/onboarding/steps/StepQuickActions.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/onboarding/steps/StepWelcome.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/onboarding/steps/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/onboarding/useSpotlightTour.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/pages/AuthCallback.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/pages/AuthPage.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/pages/Brand.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/pages/ForgotPassword.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/pages/Login.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/pages/SignIn.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/pages/SignInPage.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/pages/SignUp.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/pages/SignUpPage.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/pages/UpdatePassword.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/pages/__tests__/AuthPage.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/pages/__tests__/SignIn.openRedirectWarns.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/reducers/writingReducer.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/routes/AnonOnlyRoute.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/routes/Health.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/routes/ProtectedRoute.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/SnapshotServiceImpl.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/TourStorage.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/__mocks__/SnapshotService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/__mocks__/tutorialStorage.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/__tests__/claudeService.comprehensive.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/__tests__/connectivityService.comprehensive.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/__tests__/connectivityService.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/__tests__/enhancedStorageService.error.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/__tests__/enhancedStorageService.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/__tests__/offlineStorageManager.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/__tests__/pwaService.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/__tests__/snapshotService.comprehensive.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/__tests__/tutorialStorage.comprehensive.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/advancedCharacterConsistencyAnalyzer.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/aiConfigService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/aiPlotAnalysisService.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/aiPlotAnalysisService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/aiRetryService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/aiService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/aiStatusMonitor.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/analyticsService.d.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/analyticsService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/analyticsTypes.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/backupCore.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/backupExport.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/backupService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/backupServices.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/backupSetup.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/chaptersService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/characterConsistencyAnalyzer.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/claudeService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/connectivityService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/consistencyGuardianService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/editorConsistencyDecorator.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/enhancedSearchService.mainthread.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/enhancedSearchService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/enhancedStorageService.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/enhancedStorageService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/enhancedTimelineService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/epubValidationService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/errors/PlotAnalysisError.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/exportService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/featureFlagService.presets.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/featureFlagService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/importService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/indexedDbBackupService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/mockAIService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/plotAnalysis/components/ArcHeatmap.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/plotAnalysis/components/InsightList.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/plotAnalysis/components/PacingChart.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/plotAnalysis/components/PlotAnalysisPanel.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/plotAnalysis/components/ScorecardSummary.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/plotAnalysis/components/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/plotAnalysis/dataPrep.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'MAX_SUMMARY_TOKENS' is assigned a value but never used. Allowed unused vars must match /^_/u.",
        "line": 8,
        "column": 7,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 8,
        "endColumn": 25
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 1,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "// Data preparation for Plot Analysis\n\nimport type { Project } from '@/context/AppContext';\n\nimport type { BookMetrics, ChapterMetrics, PlotAnalysisFilters } from './types';\n\nconst MAX_SUMMARY_CHARS = 1200;\nconst MAX_SUMMARY_TOKENS = 220; // Rough estimate: ~5.5 chars per token\nconst MAX_CHAPTERS = 30;\nconst CONFLICT_VERBS = [\n  'struggle',\n  'lose',\n  'risk',\n  'discover',\n  'chase',\n  'fight',\n  'escape',\n  'confront',\n];\n\n/**\n * Truncate text to max chars on sentence boundary\n */\nfunction truncateOnSentence(text: string, maxChars: number): string {\n  if (text.length <= maxChars) return text;\n\n  const truncated = text.slice(0, maxChars);\n  const lastPeriod = truncated.lastIndexOf('.');\n  const lastQuestion = truncated.lastIndexOf('?');\n  const lastExclaim = truncated.lastIndexOf('!');\n\n  const lastSentence = Math.max(lastPeriod, lastQuestion, lastExclaim);\n\n  if (lastSentence > maxChars * 0.7) {\n    return truncated.slice(0, lastSentence + 1);\n  }\n\n  return truncated + '...';\n}\n\n/**\n * Redact PII (emails, URLs) from text\n */\nfunction redactPII(text: string): string {\n  // Redact emails\n  let cleaned = text.replace(/\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g, '[REDACTED]');\n\n  // Redact URLs\n  cleaned = cleaned.replace(/https?:\\/\\/[^\\s]+/g, '[REDACTED]');\n\n  return cleaned;\n}\n\n/**\n * Extract first N words from chapter content as summary\n */\nfunction extractSummary(content: string, maxWords: number = 200): string {\n  if (!content) return '';\n\n  const words = content.trim().split(/\\s+/);\n  const summary = words.slice(0, maxWords).join(' ');\n\n  return truncateOnSentence(summary, MAX_SUMMARY_CHARS);\n}\n\n/**\n * Compute word count for text\n */\nexport function countWords(text: string): number {\n  if (!text) return 0;\n  return text\n    .trim()\n    .split(/\\s+/)\n    .filter((word) => word.length > 0).length;\n}\n\n/**\n * Extract tags from chapter (POV, arc markers, etc.)\n */\nfunction extractTags(chapter: any): string[] {\n  const tags: string[] = [];\n\n  // Add POV if present\n  if (chapter.pov) {\n    tags.push(`pov:${chapter.pov}`);\n  }\n\n  // Add status tags\n  if (chapter.status) {\n    tags.push(chapter.status.toLowerCase());\n  }\n\n  // Add arc markers if present\n  if (chapter.arcMarker) {\n    tags.push(chapter.arcMarker.toLowerCase());\n  }\n\n  // Check content for structural markers\n  const content = (chapter.content || '').toLowerCase();\n  if (content.includes('setup') || content.includes('introduction')) tags.push('setup');\n  if (CONFLICT_VERBS.some((verb) => content.includes(verb))) tags.push('conflict');\n  if (content.includes('turn') || content.includes('twist')) tags.push('turn');\n  if (content.includes('resolution') || content.includes('payoff')) tags.push('payoff');\n  if (content.includes('aftermath') || content.includes('epilogue')) tags.push('aftermath');\n\n  return [...new Set(tags)]; // Deduplicate\n}\n\n/**\n * Sample chapters evenly if count exceeds limit\n */\nfunction sampleChapters(chapters: any[], maxCount: number): { chapters: any[]; sampled: boolean } {\n  if (chapters.length <= maxCount) {\n    return { chapters, sampled: false };\n  }\n\n  const step = chapters.length / maxCount;\n  const sampled = [];\n\n  for (let i = 0; i < maxCount; i++) {\n    const index = Math.floor(i * step);\n    sampled.push(chapters[index]);\n  }\n\n  return { chapters: sampled, sampled: true };\n}\n\n/**\n * Prepare chapter metrics from project data\n */\nexport function prepareChapterMetrics(\n  project: Project,\n  filters: PlotAnalysisFilters,\n): ChapterMetrics[] {\n  if (!project.chapters || project.chapters.length === 0) {\n    return [];\n  }\n\n  let chapters = project.chapters;\n\n  // Apply filters\n  if (!filters.includeNotes) {\n    chapters = chapters.filter((ch: any) => ch.status !== 'notes');\n  }\n\n  if (!filters.includeDrafts) {\n    chapters = chapters.filter((ch: any) => ch.status !== 'draft');\n  }\n\n  if (filters.excludedChapterIds.length > 0) {\n    chapters = chapters.filter((ch: any) => !filters.excludedChapterIds.includes(ch.id));\n  }\n\n  // Convert to metrics\n  const metrics: ChapterMetrics[] = chapters.map((ch: any, index: number) => {\n    const content = ch.content || '';\n    const summary = extractSummary(content);\n    const cleanSummary = redactPII(summary);\n\n    return {\n      i: index,\n      title: ch.title || `Chapter ${index + 1}`,\n      words: countWords(content),\n      pov: ch.pov,\n      tags: extractTags(ch),\n      updatedAt: ch.updatedAt ? new Date(ch.updatedAt).toISOString() : new Date().toISOString(),\n      summary: cleanSummary,\n    };\n  });\n\n  return metrics;\n}\n\n/**\n * Prepare book-level metrics for analysis\n */\nexport function prepareBookMetrics(\n  project: Project,\n  filters: PlotAnalysisFilters,\n): { data: BookMetrics; sampled: boolean } {\n  const allMetrics = prepareChapterMetrics(project, filters);\n  const { chapters, sampled } = sampleChapters(allMetrics, MAX_CHAPTERS);\n\n  const totalWords = chapters.reduce((sum, ch) => sum + ch.words, 0);\n\n  return {\n    data: {\n      chapters,\n      totalWords,\n      targets: {\n        midpointPct: [0.45, 0.55],\n        incitingPctMax: 0.2,\n        climaxPct: [0.8, 0.95],\n      },\n    },\n    sampled,\n  };\n}\n\n/**\n * Compute project hash for cache invalidation\n */\nexport function computeProjectHash(project: Project): string {\n  const content = project.chapters?.map((ch: any) => `${ch.id}:${ch.updatedAt}`).join('|') || '';\n\n  // Simple hash (not cryptographic, just for cache busting)\n  let hash = 0;\n  for (let i = 0; i < content.length; i++) {\n    const char = content.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash; // Convert to 32-bit integer\n  }\n\n  return Math.abs(hash).toString(36);\n}\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/plotAnalysis/hooks/usePlotAnalysis.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/plotAnalysis/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/plotAnalysis/insightRules.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/plotAnalysis/llmAnalysis.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/plotAnalysis/plotAnalysisService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/plotAnalysis/types.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/plotAnalysis/types.ui.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/prefsService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/professionalExportService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/projectContextService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/prompts/plotAnalysisPrompts.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/providers/anthropicClient.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/providers/googleClient.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/providers/openaiClient.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/pwaService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/realTimeConsistencyCoordinator.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/searchService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/searchWorkerService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/simpleTourStorage.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/smartSearchService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/snapshotAdapter.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/snapshotService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/storageService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/storyArchitectService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/timelineConflictService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/timelinePlotConsistencyAnalyzer.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/timelineService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/tutorialStorage.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'stores' is assigned a value but never used. Allowed unused vars must match /^_/u.",
        "line": 46,
        "column": 9,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 46,
        "endColumn": 15
      },
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'isFirstProfile' is assigned a value but never used. Allowed unused args must match /^_/u.",
        "line": 236,
        "column": 3,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 236,
        "endColumn": 17
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 2,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import { useCallback } from 'react';\n\nimport { useAuth } from '../context/AuthContext';\nimport { useMaybeDB, defineStores } from '../data/dbFactory';\n\nexport interface TutorialProgress {\n  slug: string;\n  progress: {\n    currentStep: number;\n    completedSteps: string[];\n    tourType: 'full-onboarding' | 'feature-tour' | 'contextual-help';\n    startedAt: number;\n    completedAt?: number;\n    isCompleted: boolean;\n    totalSteps: number;\n    lastActiveAt: number;\n  };\n  updatedAt: number;\n}\n\nexport interface TutorialPreferences {\n  neverShowAgain: boolean;\n  remindMeLater: boolean;\n  remindMeLaterUntil?: number;\n  completedTours: string[];\n  tourDismissals: number;\n  hasLaunched?: boolean;\n}\n\nexport interface CompletionChecklist {\n  createProject: boolean;\n  addChapter: boolean;\n  addCharacter: boolean;\n  writeContent: boolean;\n  useTimeline: boolean;\n  exportProject: boolean;\n  useAI: boolean;\n}\n\n/**\n * Hook for managing tutorial progress, preferences, and checklist data.\n */\nexport function useTutorialStorage() {\n  const { user } = useAuth();\n  const db = useMaybeDB();\n  const stores = defineStores(db);\n\n  const isUserActive = Boolean(user?.id && db);\n\n  const getProgress = useCallback(\n    async (_slug: string): Promise<TutorialProgress | null> => {\n      if (!isUserActive) return null;\n      // TODO: implement IndexedDB get logic\n      return null;\n    },\n    [isUserActive],\n  );\n\n  const setProgress = useCallback(\n    async (_slug: string, _progress: TutorialProgress['progress']) => {\n      if (!isUserActive) return;\n      // TODO: implement IndexedDB put logic\n    },\n    [isUserActive],\n  );\n\n  const clearProgress = useCallback(\n    async (_slug?: string) => {\n      if (!isUserActive) return;\n      // TODO: implement clear logic for one or all progress entries\n    },\n    [isUserActive],\n  );\n\n  const getPreferences = useCallback(async (): Promise<TutorialPreferences | null> => {\n    if (!isUserActive) return null;\n    // TODO: implement get preferences logic\n    return null;\n  }, [isUserActive]);\n\n  const setPreferences = useCallback(\n    async (_preferences: TutorialPreferences) => {\n      if (!isUserActive) return;\n      // TODO: implement save preferences logic\n    },\n    [isUserActive],\n  );\n\n  const getChecklist = useCallback(async (): Promise<CompletionChecklist | null> => {\n    if (!isUserActive) return null;\n    // TODO: implement get checklist logic\n    return null;\n  }, [isUserActive]);\n\n  const setChecklist = useCallback(\n    async (_checklist: CompletionChecklist) => {\n      if (!isUserActive) return;\n      // TODO: implement save checklist logic\n    },\n    [isUserActive],\n  );\n\n  const getAllProgress = useCallback(async (): Promise<TutorialProgress[]> => {\n    if (!isUserActive) return [];\n    // TODO: implement get all progress logic\n    return [];\n  }, [isUserActive]);\n\n  /**\n   * Reset a tour's progress so it can be relaunched from step 0.\n   * totalSteps is optional; if omitted we'll keep whatever was there (or default to 4).\n   * tourType is optional; defaults to 'full-onboarding' to match first-run.\n   */\n  const resetProgress = useCallback(\n    async (\n      slug: string,\n      _totalSteps?: number,\n      _tourType: TutorialProgress['progress']['tourType'] = 'full-onboarding',\n    ) => {\n      if (!isUserActive) return;\n      const existing = await getProgress(slug);\n      const now = Date.now();\n      const currentTotal = _totalSteps ?? existing?.progress.totalSteps ?? 4;\n      const payload: TutorialProgress = {\n        slug,\n        updatedAt: now,\n        progress: {\n          currentStep: 0,\n          completedSteps: [],\n          tourType: _tourType,\n          startedAt: now,\n          completedAt: undefined,\n          isCompleted: false,\n          totalSteps: currentTotal,\n          lastActiveAt: now,\n        },\n      };\n      await setProgress(slug, payload.progress);\n    },\n    [getProgress, setProgress, isUserActive],\n  );\n\n  return {\n    // Core progress methods\n    getProgress,\n    setProgress,\n    clearProgress,\n    getAllProgress,\n\n    // Reset utility\n    resetProgress,\n\n    // Preferences methods\n    getPreferences,\n    setPreferences,\n\n    // Checklist methods\n    getChecklist,\n    setChecklist,\n\n    // User context\n    userId: user?.id || null,\n    isUserActive,\n  };\n}\n\n/**\n * Legacy localStorage-based storage (fallback for migration)\n */\nexport class LegacyTutorialStorage {\n  private static getKey(suffix: string, profileId?: string): string {\n    return profileId ? `inkwell:tutorial:${profileId}:${suffix}` : `inkwell:tutorial:${suffix}`;\n  }\n\n  static getProgress(slug: string = '__default__', profileId?: string): TutorialProgress | null {\n    try {\n      const key = this.getKey(`progress:${slug}`, profileId);\n      const data = localStorage.getItem(key);\n      return data ? (JSON.parse(data) as TutorialProgress) : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static setProgress(\n    slug: string = '__default__',\n    progress: TutorialProgress,\n    profileId?: string,\n  ): void {\n    try {\n      const key = this.getKey(`progress:${slug}`, profileId);\n      localStorage.setItem(key, JSON.stringify(progress));\n    } catch {\n      /* ignore */\n    }\n  }\n\n  static getPreferences(profileId?: string): TutorialPreferences | null {\n    try {\n      const key = this.getKey('preferences', profileId);\n      const data = localStorage.getItem(key);\n      return data ? (JSON.parse(data) as TutorialPreferences) : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getChecklist(profileId?: string): CompletionChecklist | null {\n    try {\n      const key = this.getKey('checklist', profileId);\n      const data = localStorage.getItem(key);\n      return data ? (JSON.parse(data) as CompletionChecklist) : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getAllLegacyKeys(): string[] {\n    return Object.keys(localStorage).filter((k) => k.startsWith('inkwell:tutorial:'));\n  }\n\n  static clearLegacyData(profileId?: string): void {\n    const prefix = profileId ? `inkwell:tutorial:${profileId}:` : 'inkwell:tutorial:';\n    Object.keys(localStorage).forEach((k) => {\n      if (k.startsWith(prefix)) localStorage.removeItem(k);\n    });\n  }\n}\n\n/**\n * Migration helper – migrates old localStorage tutorial data into the new IndexedDB\n */\nexport async function _migrateLegacyTutorialData(\n  profileId: string,\n  db: any, // Replace with the correct ProfileStorageManager type\n  isFirstProfile = false,\n): Promise<void> {\n  // TODO: implement migration logic from LegacyTutorialStorage to IndexedDB\n  // Use `defineStores(db)` and upsert data into appropriate tables.\n}\n\n// Export the default hook\nexport default useTutorialStorage;\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/services/voiceConsistencyService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/setupTests.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/state/onboarding/onboardingSlice.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/stores/useChaptersStore.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/stores/useSettingsStore.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/sync/conflict.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/sync/queue.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/sync/useSyncManager.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/test-utils/component-mocks.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/test-utils/getters.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/test-utils/invariants.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/TourService.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/TourTypes.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/__tests__/TourService.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/__tests__/anchors.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/__tests__/persistence.spec.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/adapters/analyticsAdapter.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/adapters/routerAdapter.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/analytics.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/anchors.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/components/Spotlight.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/components/StepCard.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/components/TourOrchestrator.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/config/tourFeatureFlags.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/configs/aiToolsTour.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/configs/defaultTour.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/configs/exportTour.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/crashShield.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/featureTours.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/getSpotlightSteps.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/hooks/useAnalytics.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'TrackingEvent' is defined but never used. Allowed unused vars must match /^_/u.",
        "line": 8,
        "column": 6,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 8,
        "endColumn": 19
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 1,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "// File: src/tour/hooks/useAnalytics.ts\n// Analytics hook for tracking tour usage\nimport { useCallback } from 'react';\n\nimport devLog from \"@/utils/devLog\";\n\n\ntype TrackingEvent = {\n  eventName: string;\n  properties?: Record<string, any>;\n};\n\nexport function useAnalytics() {\n  const trackEvent = useCallback((eventName: string, properties?: Record<string, any>) => {\n    // Ensure we're in a browser environment\n    if (typeof window === 'undefined') return;\n\n    // Send to analytics service if available\n    if ('analytics' in window) {\n      (window as any).analytics.track(eventName, {\n        ...properties,\n        source: 'tour',\n      });\n    }\n\n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      devLog.debug('[Tour Analytics]', { eventName, properties });\n    }\n  }, []);\n\n  return {\n    trackEvent,\n  };\n}\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/hooks/useRouter.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/hooks/useTourStorage.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/integrations/autoStartIntegration.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/integrations/tourLifecycleIntegration.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/persistence.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/state.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/steps.v2.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/targets.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/tourEntry.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/tourLauncher.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/tourStorage.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/types.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/ui/SpotlightMask.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/ui/SpotlightOverlay.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/ui/SpotlightTooltip.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/ui/a11y.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/ui/geometry.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/ui/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/ui/portal.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/ui/positioning.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/ui/useSpotlightUI.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/useTourRegistration.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/variants/aiToolsTour.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/tour/variants/exportTour.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types.d.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/ai.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/analytics.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/claude.d.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/commands.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/feature-flags.d.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/featureFlags.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/index.d.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/metrics.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/notifications.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/persistence.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/plotAnalysis.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/profile.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/project.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/projectUpdates.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/search.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/shims.d.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/storage.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/supabase.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/testing.d.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/timeline.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/tour.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/ui.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/userProfile.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/types/writing.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'ExportFormat' is defined but never used. Allowed unused vars must match /^_/u.",
        "line": 19,
        "column": 10,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 19,
        "endColumn": 22
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 1,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "/**\n * Writing domain types\n * - Flexible enough to tolerate existing usage across services/components\n * - Strong where it matters (ids, nesting), loose for optional props\n */\n\nexport type SceneStatus = 'draft' | 'in_progress' | 'final' | 'archived' | (string & {});\nexport type ChapterStatus = 'draft' | 'revising' | 'final' | 'archived' | (string & {});\n\n/** Export formats used by ExportDialog and downstream utilities */\nexport type ExportFormat = 'markdown' | 'html' | 'pdf' | 'docx' | (string & {});\n\n/** Some code references ExportFormat without importing. Make it safe globally. */\ndeclare global {\n  var __inkwell_has_global_exportformat__: true | undefined;\n  // Only define once\n  // @ts-ignore\n  if (!globalThis.__inkwell_has_global_exportformat__) {\n    type ExportFormat = 'markdown' | 'html' | 'pdf' | 'docx' | (string & {});\n    // @ts-ignore\n    globalThis.__inkwell_has_global_exportformat__ = true;\n  }\n}\n\n/** Common identity & audit fields */\nexport interface BaseEntity {\n  id: string;\n  createdAt?: Date | number | string;\n  updatedAt?: Date | number | string;\n}\n\n/** Character (needed by timelineConflictService and tests) */\nexport interface Character extends BaseEntity {\n  name: string;\n  description?: string;\n  traits?: Record<string, unknown>;\n  tags?: string[];\n  [key: string]: any;\n}\n\n/** Scene is the atomic writing unit */\nexport interface Scene extends BaseEntity {\n  title: string;\n  content?: string;\n  /** numeric order inside its chapter (1-based or 0-based depending on caller) */\n  order?: number;\n  status?: SceneStatus;\n  /** optional metadata used around the app */\n  summary?: string;\n  pov?: string;\n  location?: string;\n  characterIds?: string[];\n  tags?: string[];\n  eventType?: string; // e.g., 'plot', 'character', etc.\n  importance?: 'minor' | 'major' | (string & {});\n  [key: string]: any; // keep permissive for legacy usage\n}\n\n/** Chapter groups scenes */\nexport interface Chapter extends BaseEntity {\n  title: string;\n  scenes: Scene[];\n  order?: number;\n  status?: ChapterStatus;\n  summary?: string;\n  notes?: string;\n  [key: string]: any;\n}\n\n// ========================================\n// Enhanced Chapter Management\n// ========================================\n\n/**\n * Chapter metadata - lightweight for lists and analytics\n * Stored separately from content for performance\n */\nexport interface ChapterMeta {\n  id: string;\n  projectId: string;\n  title: string;\n  index: number; // display order (0-based)\n  summary?: string;\n  status: 'draft' | 'revising' | 'final';\n  wordCount: number; // denormalized for fast UI\n  sceneCount?: number; // optional: number of scenes\n  tags?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\n/**\n * Chapter document - heavy content stored separately\n * Enables fast lists without loading all content\n */\nexport interface ChapterDoc {\n  id: string; // same as ChapterMeta.id\n  content: string; // editor-serialized content (HTML/markdown/JSON)\n  version: number; // for optimistic locking\n  scenes?: Scene[]; // optional embedded scenes\n}\n\n/**\n * Full chapter with both meta and content\n * Used when editing/displaying a chapter\n */\nexport interface FullChapter extends ChapterMeta {\n  content: string;\n  version: number;\n  scenes?: Scene[];\n}\n\n/**\n * Chapter creation input\n */\nexport interface CreateChapterInput {\n  id?: string; // optional: if not provided, service will generate\n  projectId: string;\n  title?: string;\n  summary?: string;\n  content?: string;\n  index?: number; // if not provided, appends to end\n  status?: 'draft' | 'revising' | 'final';\n}\n\n/**\n * Chapter update input\n */\nexport interface UpdateChapterInput {\n  id: string;\n  title?: string;\n  summary?: string;\n  status?: 'draft' | 'revising' | 'final';\n  tags?: string[];\n}\n\n/** Helpful aliases used around services */\nexport type WritingChapter = Chapter;\nexport type WritingScene = Scene;\n\n/** Light-weight project shape some services expect when pairing with writing */\nexport interface WritingProject extends BaseEntity {\n  name: string;\n  description?: string;\n  chapters?: Chapter[];\n  characters?: Character[];\n  currentWordCount?: number;\n  sessions?: Array<{ startTime: number | string; endTime?: number | string }>;\n  [key: string]: any;\n}\n\n/** Export request/response helpers */\nexport interface ExportRequest {\n  projectId: string;\n  format: ExportFormat;\n  chapters?: Chapter[];\n  scenes?: Scene[];\n  options?: Record<string, unknown>;\n}\n\nexport interface ExportResult {\n  format: ExportFormat;\n  blob?: Blob;\n  content?: string; // for text-like exports\n  filename?: string;\n}\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/FeatureFlagManager.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/__test__/test-utils.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/__tests__/FeatureFlagManager.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/__tests__/debounce.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/__tests__/featureFlags.react.test.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/__tests__/id.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/__tests__/idUtils.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/__tests__/mockFeatureFlagManager.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/__tests__/projectBundle.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/__tests__/quotaAwareStorage.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/__tests__/safeRedirect.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/__tests__/storage.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/__tests__/testFlags.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/__tests__/theme.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/__tests__/tourTriggers.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/activityLogger.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/analyticsUtils.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/array.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/auth.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/backup.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/backupUtils.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/chapterImporter.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/cn.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/constants.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/debounce.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/debugOnboardingGate.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/devBackfill.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/devLog.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/devLogger.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/dom/__tests__/safeObserver.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/dom/__tests__/waitForRoot.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/dom/safeObserver.ts",
    "messages": [],
    "suppressedMessages": [
      {
        "ruleId": "no-console",
        "severity": 2,
        "message": "Unexpected console statement. Only these console methods are allowed: warn, error.",
        "line": 27,
        "column": 7,
        "nodeType": "MemberExpression",
        "messageId": "limited",
        "endLine": 27,
        "endColumn": 20,
        "suggestions": [
          {
            "fix": { "range": [769, 827], "text": "" },
            "messageId": "removeConsole",
            "data": { "propertyName": "debug" },
            "desc": "Remove the console.debug()."
          }
        ],
        "suppressions": [{ "kind": "directive", "justification": "" }]
      }
    ],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/dom/waitForRoot.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/domUtils.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/errorHandler.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/export.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/exportFormats.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/exportUtils.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/featureFlags.config.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/featureFlags.react.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/flags.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/focusUtils.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/id.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/idUtils.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/lazyLoading.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/logger.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/navigate.ts",
    "messages": [],
    "suppressedMessages": [
      {
        "ruleId": "no-restricted-imports",
        "severity": 2,
        "message": "'useNavigate' import from 'react-router-dom' is restricted. Please use \"useGo\" from \"@/utils/navigate\" instead of direct useNavigate to maintain consistency and testability.",
        "line": 4,
        "column": 10,
        "nodeType": "ImportDeclaration",
        "messageId": "importNameWithCustomMessage",
        "endLine": 4,
        "endColumn": 21,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      }
    ],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/perf.ts",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'e' is defined but never used. Allowed unused caught errors must match /^_/u.",
        "line": 12,
        "column": 12,
        "nodeType": null,
        "messageId": "unusedVar",
        "endLine": 12,
        "endColumn": 13
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 1,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "/**\n * Lightweight performance measurement utilities for dev/CI\n * Usage:\n *   mark('app:boot')\n *   // ... some work ...\n *   measure('tti:dashboard', 'app:boot')\n */\n\nexport function mark(name: string): void {\n  try {\n    performance.mark(name);\n  } catch (e) {\n    // Silently fail in environments without performance API\n  }\n}\n\nexport function measure(label: string, start: string, end?: string): number | null {\n  try {\n    if (end) performance.mark(end);\n    performance.measure(label, start, end);\n    const entry = performance.getEntriesByName(label)[0];\n    return entry?.duration ?? null;\n  } catch {\n    return null;\n  }\n}\n\nexport function clearMarks(prefix?: string): void {\n  try {\n    if (prefix) {\n      const marks = performance.getEntriesByType('mark');\n      marks.filter((m) => m.name.startsWith(prefix)).forEach((m) => performance.clearMarks(m.name));\n    } else {\n      performance.clearMarks();\n    }\n  } catch {\n    // Ignore\n  }\n}\n\nexport function clearMeasures(prefix?: string): void {\n  try {\n    if (prefix) {\n      const measures = performance.getEntriesByType('measure');\n      measures\n        .filter((m) => m.name.startsWith(prefix))\n        .forEach((m) => performance.clearMeasures(m.name));\n    } else {\n      performance.clearMeasures();\n    }\n  } catch {\n    // Ignore\n  }\n}\n\n/**\n * Get all measures matching a pattern\n */\nexport function getMeasures(pattern?: string): PerformanceEntry[] {\n  try {\n    const all = performance.getEntriesByType('measure');\n    if (!pattern) return all;\n    return all.filter((m) => m.name.includes(pattern));\n  } catch {\n    return [];\n  }\n}\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/preload.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/projectBundle.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/quotaAwareStorage.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/routerGuards.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/safeObserve.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/safeRedirect.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/searchDataAdapter.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/stoageAdapter.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/storage.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/storage/__tests__/persistence.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/storage/__tests__/privateMode.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/storage/__tests__/storageHealth.comprehensive.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/storage/__tests__/storageHealth.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/storage/originGuard.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/storage/persistence.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/storage/persistenceE2E.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/storage/privateMode.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/storage/storageHealth.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/storage/storageVerification.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/storageAccess.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/storageCompat.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/storageKeyMigration.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/syntheticCorpusGenerator.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/text.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/textAnalysis.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/theme.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/tourTriggers.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/trace.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/utils/tutorialLinks.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/validation/profileSchema.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/validation/projectSchema.test.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/validation/projectSchema.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/vite-env.d.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/workers/phraseWorker.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/workers/search.worker.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "/Users/davehail/Developer/inkwell/src/workers/searchWorker.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  }
]
