name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  detect-changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      code: ${{ steps.filter.outputs.code }}
      docs: ${{ steps.filter.outputs.docs }}
      infra: ${{ steps.filter.outputs.infra }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            code:
              - 'src/**'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'tsconfig*.json'
              - 'vite.config.*'
              - 'vitest.config.*'
              - 'eslint.config.*'
            docs:
              - 'README.md'
              - 'docs/**'
            infra:
              - '.github/workflows/**'
              - 'vercel.json'
              - 'Dockerfile'

  lint:
    name: Lint
    needs: [detect-changes]
    if: ${{ needs.detect-changes.outputs.code == 'true' || github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.12.0
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile

      - name: Grep for console.log
        run: |
          if git ls-files 'src/**' | xargs grep -n "console\.log(" 2>/dev/null; then
            echo "❌ Found console.log calls. Please use devLog.debug or console.warn/error."
            exit 1
          else
            echo "✅ No console.log found."
          fi

      - run: pnpm lint:ci

  typecheck:
    name: Typecheck
    needs: [detect-changes]
    if: ${{ needs.detect-changes.outputs.code == 'true' || github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.12.0
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm typecheck

  test:
    name: Test
    needs: [detect-changes]
    if: ${{ needs.detect-changes.outputs.code == 'true' || github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.12.0
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm test -- --run --coverage
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
        if: always()

  build:
    name: Build
    needs: [detect-changes]
    if: ${{ needs.detect-changes.outputs.code == 'true' || github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.12.0
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm run check:env
      - name: Build
        run: pnpm build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_ENABLE_PWA: 'true'
